
# Queries for Login Functionality
LOGIN.USER.GETINFO= SELECT A.ID, A.USER_TYPE_ID, A.USER_NAME, A.FIRST_NAME, A.MIDDLE_NAME, A.LASTNAME, A.PREFIX, A.SUFFIX ,B.USER_TYPE_NAME from USER_TABLE A ,USER_TYPE B WHERE USER_NAME = ? AND PASSWORD = ?  AND A.USER_TYPE_ID =B.USER_TYPE_ID AND A.DELETE_FLAG='N'
LOGIN.ROLES.SELECT =SELECT DISTINCT A.ROLE_ID,B.ROLE_NAME FROM TEAM_STRUCTURE A,TEAM_ROLE B WHERE ID=? AND A.ROLE_ID=B.ROLE_ID

# Queries for workflow functionalities

WORKFLOW.WFMASTER.INSERT = INSERT INTO WORKFLOW_MASTER (WORKFLOW_ID, ROOT_HIERARCHY_ID,WORKFLOW_NAME,WORKFLOW_DESC,ACTIVE_STATUS, DELETE_FLAG, CREATE_TIME,UPDATE_TIME ) VALUES ((SELECT NVL(MAX(WORKFLOW_ID),0)+1 FROM WORKFLOW_MASTER),?,?,?,?,?,SYSDATE,SYSDATE)
WORKFLOW.WFMASTER.UPDATE = UPDATE WORKFLOW_MASTER SET ROOT_HIERARCHY_ID=?, WORKFLOW_NAME=?, WORKFLOW_DESC=?, ACTIVE_STATUS=?, UPDATE_TIME=SYSDATE WHERE WORKFLOW_ID=?
WORKFLOW.WFMASTER.DELETE = UPDATE WORKFLOW_MASTER SET DELETE_FLAG='Y' WHERE WORKFLOW_ID=?
WORKFLOW.WFMASTER.FINDALL = SELECT WORKFLOW_ID, ROOT_HIERARCHY_ID, WORKFLOW_NAME, WORKFLOW_DESC, ACTIVE_STATUS, DELETE_FLAG, CREATE_TIME, UPDATE_TIME FROM WORKFLOW_MASTER WHERE DELETE_FLAG='N'
WORKFLOW.WFMASTER.FIND_ACTIVE_WF = SELECT WORKFLOW_ID, ROOT_HIERARCHY_ID, WORKFLOW_NAME, WORKFLOW_DESC, ACTIVE_STATUS, DELETE_FLAG, CREATE_TIME, UPDATE_TIME FROM WORKFLOW_MASTER WHERE ROOT_HIERARCHY_ID=? AND ACTIVE_STATUS=?
WORKFLOW.WFMASTER.FINDBY_WF_ID = SELECT WORKFLOW_ID, ROOT_HIERARCHY_ID, WORKFLOW_NAME, WORKFLOW_DESC, ACTIVE_STATUS, DELETE_FLAG, CREATE_TIME, UPDATE_TIME FROM WORKFLOW_MASTER WHERE WORKFLOW_ID=?
WORKFLOW.WFMASTER.HIER_ROOTS = SELECT HIERARCHY_ID, HIERARCHY_NAME FROM EVENT_HIERARCHY WHERE PARENT_ID=0 AND EVENT_TYPE_ID!=0 AND DELETE_FLAG='N'

WORKFLOW.WFSTEPMASTER.INSERT = INSERT INTO WORKFLOW_STEP_MASTER (WF_STEP_ID, WORKFLOW_ID, WF_STEP_NAME, WF_STEP_DESC, STEP_TYPE, STEP_SEQUENCE, CREATE_TIME,UPDATE_TIME ) VALUES ((SELECT NVL(MAX(WF_STEP_ID),0)+1 FROM WORKFLOW_STEP_MASTER),?,?,?,?,?,SYSDATE,SYSDATE)
WORKFLOW.WFSTEPMASTER.UPDATE = UPDATE WORKFLOW_STEP_MASTER SET WF_STEP_NAME=?, WF_STEP_DESC=?, STEP_TYPE=?, STEP_SEQUENCE=?, UPDATE_TIME=SYSDATE WHERE WF_STEP_ID=?
WORKFLOW.WFSTEPMASTER.DELETE = DELETE FROM WORKFLOW_STEP_MASTER WHERE WF_STEP_ID=?
WORKFLOW.WFSTEPMASTER.FINDALL = SELECT WF_STEP_ID, WORKFLOW_ID, WF_STEP_NAME, WF_STEP_DESC, STEP_TYPE, STEP_SEQUENCE, CREATE_TIME, UPDATE_TIME FROM WORKFLOW_STEP_MASTER WHERE WORKFLOW_ID=? ORDER BY STEP_SEQUENCE
WORKFLOW.WFSTEPMASTER.FINDBY_WFSTEP_ID = SELECT WF_STEP_ID, WORKFLOW_ID, WF_STEP_NAME, WF_STEP_DESC, STEP_TYPE, STEP_SEQUENCE, CREATE_TIME, UPDATE_TIME FROM WORKFLOW_STEP_MASTER WHERE WF_STEP_ID=?
WORKFLOW.WFSTEPMASTER.FINDALLWFSTEPS = SELECT WORKFLOW_ID,WF_STEP_ID,WF_STEP_NAME FROM WORKFLOW_STEP_MASTER GROUP BY WORKFLOW_ID,STEP_SEQUENCE,WF_STEP_ID,WF_STEP_NAME
WORKFLOW.WFSTEPMASTER.USER_GRPS = SELECT GROUP_ID,GROUP_NAME FROM GROUP_MASTER WHERE DELETE_FLAG='N'
WORKFLOW.WFSTEPMASTER.EMAILS = SELECT TEMPLATE_ID,TEMPLATE_NAME FROM EMAIL_TEMPLATE

WORKFLOW.ACTIONGROUPMAP.INSERT = INSERT INTO WF_ACTION_GROUP_MAP (GROUP_ID, ACTION_ID, WORKFLOW_ID, SCREEN, CREATE_TIME) VALUES (?,?,?,?,SYSDATE)
WORKFLOW.ACTIONMASTER.EMAIL.INSERT = INSERT INTO WORKFLOW_ACTION_MASTER (ACTION_ID, WF_STEP_ID, TEMPLATE_ID, ACTION_TYPE, EMAIL_CONFIRM_REQ, EMAIL_CONFIRM_SOURCE, CREATE_TIME,UPDATE_TIME ) VALUES ((SELECT NVL(MAX(ACTION_ID),0)+1 FROM WORKFLOW_ACTION_MASTER),?,?,?,?,?,SYSDATE,SYSDATE)
WORKFLOW.ACTIONMASTER.SCREEN.INSERT = INSERT INTO WORKFLOW_ACTION_MASTER (ACTION_ID, WF_STEP_ID, ACTION_TYPE, SCREEN,APPROVER_ID, CREATE_TIME,UPDATE_TIME ) VALUES ((SELECT NVL(MAX(ACTION_ID),0)+1 FROM WORKFLOW_ACTION_MASTER),?,?,?,?,SYSDATE,SYSDATE)
WORKFLOW.ACTIONMASTER.FINDACTIONID = SELECT MAX(ACTION_ID) ACTION_ID FROM WORKFLOW_ACTION_MASTER
WORKFLOW.WFSTEPMASTER.FIND_MAX_WFSTEP_ID = SELECT MAX(WF_STEP_ID) WF_STEP_ID FROM WORKFLOW_STEP_MASTER
WORKFLOW.ACTIONGROUPMAP.DELETE = DELETE FROM WF_ACTION_GROUP_MAP WHERE ACTION_ID IN (SELECT ACTION_ID FROM WORKFLOW_ACTION_MASTER WHERE WF_STEP_ID = ?)
WORKFLOW.ACTIONMASTER.EMAIL.UPDATE = UPDATE WORKFLOW_ACTION_MASTER SET TEMPLATE_ID=?, ACTION_TYPE=?, EMAIL_CONFIRM_REQ=?, EMAIL_CONFIRM_SOURCE=?, UPDATE_TIME=SYSDATE WHERE ACTION_ID=?
WORKFLOW.ACTIONMASTER.SCREEN.UPDATE = UPDATE WORKFLOW_ACTION_MASTER SET ACTION_TYPE=?, SCREEN=?, APPROVER_ID=?, UPDATE_TIME=SYSDATE WHERE ACTION_ID=?
WORKFLOW.ACTIONMASTER.FIND_BY_STEP_ID = SELECT ACTION_ID FROM WORKFLOW_ACTION_MASTER WHERE WF_STEP_ID = ?
WORKFLOW.ACTIONMASTER.DELETE = DELETE FROM WORKFLOW_ACTION_MASTER WHERE WF_STEP_ID = ?
WORKFLOW.ACTIONGROUPMAP.FIND_GROUP_ID = SELECT ACTION_ID, GROUP_ID FROM WF_ACTION_GROUP_MAP WHERE ACTION_ID = ?
WORKFLOW.ACTIONMASTER.FIND_DETAILS = SELECT  A.ACTION_ID, WF_STEP_ID, TEMPLATE_ID, ACTION_TYPE, A.SCREEN, APPROVER_ID,C.GROUP_ID, EMAIL_CONFIRM_REQ, EMAIL_CONFIRM_SOURCE FROM WORKFLOW_ACTION_MASTER A ,USER_TABLE B ,WF_ACTION_GROUP_MAP C WHERE A.APPROVER_ID=B.ID AND A.ACTION_ID=C.ACTION_ID AND   A.WF_STEP_ID = ? UNION SELECT  A.ACTION_ID, WF_STEP_ID, TEMPLATE_ID, ACTION_TYPE, A.SCREEN, APPROVER_ID,C.GROUP_ID, EMAIL_CONFIRM_REQ, EMAIL_CONFIRM_SOURCE FROM WORKFLOW_ACTION_MASTER A ,WF_ACTION_GROUP_MAP C WHERE A.ACTION_ID=C.ACTION_ID AND   A.WF_STEP_ID = ?  AND ACTION_TYPE='EMAIL' UNION SELECT ACTION_ID,WF_STEP_ID,TEMPLATE_ID,ACTION_TYPE,SCREEN,APPROVER_ID,NULL,EMAIL_CONFIRM_REQ,EMAIL_CONFIRM_SOURCE FROM WORKFLOW_ACTION_MASTER  WHERE WF_STEP_ID = ? AND (SCREEN='EXPERT_APPROVAL' OR SCREEN='CONFIRM_PROGRAM')
WORKFLOW.TASK.APPROVAL.STATUS = SELECT APPROVAL_STATUS FROM WORKFLOW_TASK_DETAIL EVENT WHERE WF_TASK_ID = ?

WORKFLOW.STEP.NEXT = SELECT SCREEN FROM WORKFLOW_ACTION_MASTER WHERE WF_STEP_ID IN (SELECT WF_STEP_ID FROM WORKFLOW_STEP_MASTER WHERE WORKFLOW_ID = (SELECT WORKFLOW_ID FROM EVENT WHERE EVENT_ID=?)) AND SCREEN='EXPERT_APPROVAL'

#Queries for Team Structure
TEAMSTRUCTURE.DISPLAY.SELECT =SELECT DISTINCT A.ID,A.FIRST_NAME, A.LASTNAME, B.ROLE_ID,B.ROLE_NAME ,C.GROUP_ID,C.GROUP_NAME FROM USER_TABLE A,TEAM_ROLE B, GROUP_MASTER C ,USER_GROUP_MAP D,TEAM_STRUCTURE E WHERE A.ID=E.ID AND  B.ROLE_ID=E.ROLE_ID AND C.GROUP_ID=E.GROUP_ID AND E.HIERARCHY_ID=?
TEAM.ROLE.SELECT =SELECT ROLE_ID,ROLE_NAME FROM TEAM_ROLE
TEAM.MEMBER.INSERT =INSERT INTO TEAM_STRUCTURE (ID,ROLE_ID,GROUP_ID,HIERARCHY_ID,CREATE_TIME) VALUES(?,?,?,?,SYSDATE) 
TEAM.GROUP.USER.SELECT =SELECT A.ID,A.FIRST_NAME,A.LASTNAME FROM USER_TABLE A, USER_GROUP_MAP B WHERE A.ID=B.ID AND B.GROUP_ID=?  AND A.ID NOT IN(SELECT ID FROM TEAM_STRUCTURE WHERE HIERARCHY_ID=?)
TEAM.MEMBER.DELETE =DELETE FROM TEAM_STRUCTURE WHERE ID=? AND ROLE_ID=? AND GROUP_ID=? AND HIERARCHY_ID=? 			

# Queries for Administrator Functionality

USER.INFO.INSERT = INSERT INTO USER_TABLE(ID, USER_TYPE_ID, USER_NAME, PASSWORD, FIRST_NAME, MIDDLE_NAME, LASTNAME, PREFIX, SUFFIX, BIRTH_DATE, SECURITY_QUESTION, ANSWER, DELETE_FLAG, BIO_DATA, CREATE_TIME, UPDATE_TIME) VALUES((SELECT NVL(MAX(ID),0)+1 FROM USER_TABLE), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, SYSDATE, SYSDATE)
USER.PERSNLINFO.INSERT = INSERT INTO USER_ADDRESS(ADDRESS_ID, ID, ADDRESS1, ADDRESS2, SUITE_ROOM, CITY, STATE, COUNTRY, ZIP, PHONE, EMAIL, DELETE_FLAG, CREATE_TIME, UPDATE_TIME) VALUES((SELECT NVL(MAX(ADDRESS_ID),0)+1 FROM USER_ADDRESS), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, SYSDATE, SYSDATE)
USER.GETUSERTYPEID.SELECT = SELECT USER_TYPE_ID FROM USER_TYPE WHERE USER_TYPE_NAME = ? AND DELETE_FLAG = 'N'			
USER.GETUSERID.SELECT = SELECT ID FROM USER_TABLE WHERE USER_NAME = ? AND DELETE_FLAG = 'N'
USER.GETUSERTYPEINFO.SELECT = SELECT USER_TYPE_ID, USER_TYPE_NAME FROM USER_TYPE WHERE DELETE_FLAG = 'N' AND USER_TYPE_ID != 0 
USER.SEARCHUSERS.SELECT = SELECT U.ID, U.USER_NAME, U.FIRST_NAME, U.MIDDLE_NAME, U.LASTNAME FROM USER_TABLE U, USER_ADDRESS AD WHERE U.ID = AD.ID AND U.DELETE_FLAG = 'N' AND AD.DELETE_FLAG = 'N'
USER.SERACHGROUPS.SELECT = SELECT DISTINCT U.ID, U.USER_NAME, U.FIRST_NAME, U.MIDDLE_NAME, U.LASTNAME FROM USER_TABLE U, USER_GROUP_MAP UG WHERE U.ID = UG.ID
USER.FINDBYUSERID.SELECT = SELECT U.USER_TYPE_ID, U.USER_NAME, U.PASSWORD, U.FIRST_NAME, U.MIDDLE_NAME, U.LASTNAME, U.PREFIX, U.SUFFIX, U.BIRTH_DATE, U.SECURITY_QUESTION, U.ANSWER, U.MYREGIONS, AD.ADDRESS1, AD.ADDRESS2, AD.CITY, AD.STATE, AD.COUNTRY, AD.ZIP, AD.PHONE, AD.EMAIL, AD.SUITE_ROOM FROM USER_TABLE U, USER_ADDRESS AD WHERE U.ID = ? AND U.ID = AD.ID 
USER.FIND.USER.INFO.SELECT = SELECT USER_TYPE_ID, USER_NAME, PASSWORD, FIRST_NAME, MIDDLE_NAME, LASTNAME, PREFIX, SUFFIX, BIRTH_DATE, SECURITY_QUESTION, ANSWER, MYREGIONS FROM USER_TABLE WHERE ID = ? AND DELETE_FLAG = 'N'
USER.FIND.USER.ADDRESS.INFO.SELECT = SELECT ADDRESS1, ADDRESS2, CITY, STATE, COUNTRY, ZIP, PHONE, EMAIL, SUITE_ROOM FROM USER_ADDRESS WHERE ID = ? AND DELETE_FLAG = 'N' 
USER.INFO.UPDATE = UPDATE USER_TABLE SET USER_TYPE_ID = ?, USER_NAME = ?, PASSWORD = ?, FIRST_NAME = ?, MIDDLE_NAME = ?, LASTNAME = ?, PREFIX = ?, SUFFIX = ?, BIRTH_DATE = ?, SECURITY_QUESTION = ?, ANSWER = ?, UPDATE_TIME = SYSDATE WHERE ID = ?
USER.PERSNLINFO.UPDATE = UPDATE USER_ADDRESS SET ADDRESS1 = ?, ADDRESS2 = ?, SUITE_ROOM = ?, CITY = ?, STATE = ?, COUNTRY = ?, ZIP = ?, PHONE = ?, EMAIL = ?, UPDATE_TIME = SYSDATE WHERE ID = ? 
USER.INFO.DELETE = UPDATE USER_TABLE SET DELETE_FLAG = 'Y' WHERE ID = ?
USER.PERSNLINFO.DELETE = UPDATE USER_ADDRESS SET DELETE_FLAG = 'Y' WHERE ID = ?
USER.SEARCHALLUSERS.SELECT = SELECT U.ID, U.USER_TYPE_ID, U.USER_NAME, U.PASSWORD, U.FIRST_NAME, U.MIDDLE_NAME, U.LASTNAME, U.PREFIX, U.SUFFIX, U.BIRTH_DATE, U.SSN, U.MOTHER_MAIDEN_NAME, AD.ADDRESS1, AD.ADDRESS2, AD.CITY, AD.STATE, AD.COUNTRY, AD.ZIP, AD.PHONE, AD.SUITE_ROOM FROM USER_TABLE U, USER_ADDRESS AD WHERE U.USER_NAME LIKE ? AND U.ID = AD.ID AND U.DELETE_FLAG = 'N' AND AD.DELETE_FLAG = 'N'
USER.NAMES.SELECT = SELECT USER_NAME FROM USER_TABLE
USER.GET.ENGAGED.SELECT = SELECT DISTINCT UE.ID FROM USER_ENGAGEMENT UE, EVENT E WHERE UE.EVENT_ID = E.EVENT_ID AND E.STATUS_ID < 10

USER.GROUP.GETALLGROUPS = SELECT PARENT_ID, GROUP_ID, GROUP_NAME FROM GROUP_MASTER WHERE DELETE_FLAG ='N' GROUP BY PARENT_ID, GROUP_ID, GROUP_NAME
USER.GROUP.GETSUBGROUPS = SELECT GM.GROUP_ID, GM.PARENT_ID, GM.USER_TYPE_ID, GM.GROUP_NAME, GM.GROUP_DESC, UT.USER_TYPE_NAME FROM GROUP_MASTER GM , USER_TYPE UT WHERE GM.PARENT_ID = ? AND GM.DELETE_FLAG = 'N' AND GM.USER_TYPE_ID = UT.USER_TYPE_ID 
USER.GROUP.INSERT = INSERT INTO GROUP_MASTER(GROUP_ID, PARENT_ID, USER_TYPE_ID, GROUP_NAME, GROUP_DESC, DELETE_FLAG, CREATE_TIME, UPDATE_TIME) VALUES((SELECT NVL(MAX(GROUP_ID),0)+1 FROM GROUP_MASTER), ?, ?, ?, ?, ?, SYSDATE, SYSDATE)
USER.GROUP.UPDATE = UPDATE GROUP_MASTER SET PARENT_ID =?, USER_TYPE_ID = ?, GROUP_NAME = ?, GROUP_DESC = ?,UPDATE_TIME = SYSDATE WHERE GROUP_ID = ? 
USER.GROUP.DELETE = UPDATE GROUP_MASTER SET DELETE_FLAG='Y' WHERE GROUP_ID IN(SELECT GROUP_ID FROM GROUP_MASTER START WITH GROUP_ID = ? CONNECT BY PRIOR GROUP_ID = PARENT_ID)
USER.GROUPMAP.INSERT = INSERT INTO USER_GROUP_MAP(ID, GROUP_ID, CREATE_TIME, UPDATE_TIME) VALUES(?, ?, SYSDATE, SYSDATE)
USER.GROUPMAP.SELECT = SELECT GROUP_ID FROM USER_GROUP_MAP WHERE ID = ?
USER.GROUPMAP.DELETE = DELETE FROM USER_GROUP_MAP WHERE ID = ?
USER.GROUP.GETEXPERTGROUPS = SELECT GM.GROUP_ID, GM.GROUP_NAME FROM GROUP_MASTER GM, USER_TYPE UT WHERE GM.USER_TYPE_ID = UT.USER_TYPE_ID AND GM.DELETE_FLAG = 'N' AND UT.USER_TYPE_NAME = 'Expert' 
USER.GROUP.GETOTHERGROUPS = SELECT GM.GROUP_ID, GM.GROUP_NAME FROM GROUP_MASTER GM, USER_TYPE UT WHERE GM.USER_TYPE_ID = UT.USER_TYPE_ID AND GM.DELETE_FLAG = 'N' AND UT.USER_TYPE_NAME != 'Expert' 
USER.GROUP.GETEXPERTUSERS = SELECT UG.ID, U.FIRST_NAME, U.LASTNAME, GM.GROUP_NAME FROM USER_GROUP_MAP UG, USER_TABLE U, GROUP_MASTER GM WHERE U.DELETE_FLAG = 'N' AND UG.ID = U.ID AND UG.GROUP_ID = ? AND GM.GROUP_ID = UG.GROUP_ID
USER.GROUP.MAPPERMISSIONS = INSERT INTO VIEW_PERMISSION_MAP(EXPERT_ID, GROUP_ID, CREATE_TIME) VALUES(?, ?, SYSDATE) 
USER.GROUP.GETUSERNAME = SELECT USER_NAME FROM USER_TABLE WHERE ID = ?
USER.GROUP.GETGROUPNAME = SELECT GROUP_NAME FROM GROUP_MASTER WHERE GROUP_ID = ?
USER.GROUP.GETACTIVEVIEWS = SELECT VP.EXPERT_ID, VP.GROUP_ID, U.FIRST_NAME, U.LASTNAME, GM.GROUP_NAME FROM VIEW_PERMISSION_MAP VP, USER_TABLE U, GROUP_MASTER GM WHERE VP.EXPERT_ID = U.ID AND VP.GROUP_ID = GM.GROUP_ID 
USER.GROUP.VIEWMAPS.DELETE = DELETE FROM VIEW_PERMISSION_MAP WHERE EXPERT_ID = ? AND GROUP_ID = ?

USER.DOWNLOADTEMPLATE.GETUSERATTRIBUTES = SELECT UAM.USER_ATT_ID, UAM.LABEL_NAME, UAM.USER_ATT_NAME FROM USER_ATTRIBUTE_MASTER UAM, USER_SECTION_MASTER USM WHERE UAM.USER_SECTION_ID = USM.USER_SECTION_ID AND USM.USER_TYPE_ID = ? AND UPPER(UAM.DELETE_FLAG) LIKE 'N' AND UPPER(USM.DELETE_FLAG) LIKE 'N' ORDER BY UAM.USER_ATT_ID
USER.DOWNLOADTEMPLATE.GETPREFATTRIBUTES = SELECT PTM.PREF_TYPE_ID, PTM.PREF_TYPE_NAME, PAM.PREF_ATT_ID, PAM.LABEL_NAME, PAM.PREF_ATT_NAME FROM USER_SECTION_MASTER USM, PREFERENCE_TYPE_MASTER PTM, PREFERENCE_ATT_MASTER PAM WHERE USM.USER_TYPE_ID = ? AND USM.USER_SECTION_ID = PTM.USER_SECTION_ID AND PTM.PREF_TYPE_ID = PAM.PREF_TYPE_ID AND UPPER(PAM.DELETE_FLAG) LIKE 'N' GROUP BY PTM.PREF_TYPE_ID, PTM.PREF_TYPE_NAME, PAM.PREF_ATT_ID, PAM.LABEL_NAME, PAM.PREF_ATT_NAME ORDER BY PAM.PREF_ATT_ID
USER.LOAD.GETGROUPSBYUSERTYPE = SELECT GROUP_ID, GROUP_NAME FROM GROUP_MASTER WHERE USER_TYPE_ID = ? AND DELETE_FLAG='N'
VENUE.DOWNLOAD.GET_ATTRIBUTES = SELECT VENUE_ATT_ID, LABEL_NAME, VENUE_ATT_NAME FROM VENUE_ATTRIBUTE_MASTER WHERE VENUE_ATT_ID>12 AND DELETE_FLAG='N' ORDER BY VENUE_ATT_ID

USER.SECTION.GETALLUSERSECTIONS = SELECT USM.USER_SECTION_ID, USM.USER_TYPE_ID, UT.USER_TYPE_NAME, USM.USER_SECTION_NAME  FROM USER_SECTION_MASTER USM, USER_TYPE UT WHERE USM.DELETE_FLAG = 'N' AND USM.USER_TYPE_ID = UT.USER_TYPE_ID GROUP BY USM.USER_TYPE_ID, USM.USER_SECTION_ID, UT.USER_TYPE_NAME, USM.USER_SECTION_NAME
USER.SECTION.INSERT = INSERT INTO USER_SECTION_MASTER (USER_SECTION_ID, USER_TYPE_ID, USER_SECTION_NAME, USER_SECTION_DESC, MANDATORY_SECTION, DELETE_FLAG, CREATE_TIME, UPDATE_TIME) VALUES ((SELECT NVL(MAX(USER_SECTION_ID),0)+1 FROM USER_SECTION_MASTER), ?, ?, ?, 'N', 'N', SYSDATE, SYSDATE)
USER.SECTION.GETEDITINFO = SELECT USER_TYPE_ID, USER_SECTION_NAME, USER_SECTION_DESC FROM USER_SECTION_MASTER WHERE USER_SECTION_ID = ? AND USER_TYPE_ID = ?
USER.SECTION.UPDATE = UPDATE USER_SECTION_MASTER SET USER_TYPE_ID = ?, USER_SECTION_NAME = ?, USER_SECTION_DESC = ?, UPDATE_TIME = SYSDATE WHERE USER_SECTION_ID = ?
USER.SECTION.DELETE = UPDATE USER_SECTION_MASTER SET DELETE_FLAG = 'Y' WHERE USER_SECTION_ID = ?
USER.SECTION.GETSECTIONATTRIBUTES = SELECT UAM.USER_ATT_ID, UAM.USER_ATT_NAME, UAM.LABEL_NAME, UAM.USER_ATT_SIZE, UAM.USER_ATT_DATA_TYPE, UAM.ATTRIBUTE_TYPE, UAM.MANDATORY_FIELD, UAM.ATT_REQUIRED, USM.USER_TYPE_ID, UAM.SEARCH_FIELD,UAM.OPTIONS FROM USER_ATTRIBUTE_MASTER UAM, USER_SECTION_MASTER USM  WHERE UAM.USER_SECTION_ID = USM.USER_SECTION_ID AND  UAM.USER_SECTION_ID = ? AND UAM.DELETE_FLAG='N' ORDER BY UAM.USER_ATT_ID
USER.SECTION.GETSECTIONSFORUSERTYPE = SELECT USM.USER_SECTION_ID, USM.USER_TYPE_ID, UT.USER_TYPE_NAME, USM.USER_SECTION_NAME, USM.USER_SECTION_DESC, USM.MANDATORY_SECTION, USM.CREATE_TIME, USM.UPDATE_TIME FROM USER_SECTION_MASTER USM, USER_TYPE UT WHERE USM.USER_TYPE_ID = ? AND USM.DELETE_FLAG = 'N' AND USM.USER_TYPE_ID = UT.USER_TYPE_ID ORDER BY USM.USER_SECTION_ID, USM.USER_TYPE_ID
USER.ATTRIBUTE.INSERT = INSERT INTO USER_ATTRIBUTE_MASTER (USER_ATT_ID, USER_SECTION_ID, USER_ATT_NAME, USER_ATT_DESC, LABEL_NAME, USER_ATT_SIZE, USER_ATT_DATA_TYPE, ATTRIBUTE_TYPE,OPTIONS,ATT_REQUIRED, SEARCH_FIELD, MANDATORY_FIELD, DELETE_FLAG, CREATE_TIME, UPDATE_TIME) VALUES((SELECT NVL(MAX(USER_ATT_ID),0)+1 FROM USER_ATTRIBUTE_MASTER), ?, ?, ?, ?, ?, ?, ?,?, 'Y', 'N', 'N', 'N', SYSDATE, SYSDATE)
USER.BASIC.ATTRIBUTE.UPDATE = UPDATE USER_ATTRIBUTE_MASTER SET LABEL_NAME =?, ATT_REQUIRED= ?, SEARCH_FIELD = ? WHERE USER_ATT_ID =? AND USER_SECTION_ID = ?  
USER.ADDITIONAL.ATTRIBUTE.UPDATE = UPDATE USER_ATTRIBUTE_MASTER SET USER_ATT_NAME =?, LABEL_NAME =?, USER_ATT_SIZE =?, USER_ATT_DATA_TYPE =? , ATTRIBUTE_TYPE =?, OPTIONS =?, SEARCH_FIELD = ?, UPDATE_TIME =SYSDATE WHERE USER_ATT_ID =? AND USER_SECTION_ID = ?
USER.ATTRIBUTE.DELETE = UPDATE USER_ATTRIBUTE_MASTER SET DELETE_FLAG='Y' WHERE USER_ATT_ID =? 
USER.PREFERENCE.TYPES = SELECT PREF_TYPE_ID, PREF_TYPE_NAME FROM PREFERENCE_TYPE_MASTER WHERE USER_SECTION_ID = ?

USER.SECTION.PROF.DISTINCT.ATTRIBUTES = SELECT PAM.PREF_ATT_ID, PAM.PREF_TYPE_ID, PTM.PREF_TYPE_NAME, PAM.PREF_ATT_NAME, PAM.PREF_ATT_DESC, PAM.MANDATORY_FIELD, PAM.PREF_ATT_DATA_TYPE, PAM.PREF_ATT_SIZE, PAM.ATT_REQUIRED, PAM.ATTRIBUTE_TYPE, PAM.OPTIONS, PAM.LABEL_NAME FROM PREFERENCE_ATT_MASTER PAM, PREFERENCE_TYPE_MASTER PTM WHERE PTM.USER_SECTION_ID = ? AND PAM.PREF_TYPE_ID =? AND PAM.PREF_TYPE_ID = PTM.PREF_TYPE_ID AND PAM.DELETE_FLAG = 'N' ORDER BY PAM.PREF_ATT_ID
USER.PREF.ATTRIBUTE.INSERT = INSERT INTO PREFERENCE_ATT_MASTER (PREF_ATT_ID, PREF_TYPE_ID, PREF_ATT_NAME, PREF_ATT_DESC, LABEL_NAME, PREF_ATT_SIZE, PREF_ATT_DATA_TYPE, ATTRIBUTE_TYPE, OPTIONS, ATT_REQUIRED, MANDATORY_FIELD, DELETE_FLAG, CREATE_TIME, UPDATE_TIME) VALUES((SELECT NVL(MAX(PREF_ATT_ID),0)+1 FROM PREFERENCE_ATT_MASTER), ?, ?, ?, ?, ?, ?, ?, ?, 'Y', 'N', 'N', SYSDATE, SYSDATE)
USER.PREF.BASIC.ATTRIBUTE.UPDATE = UPDATE PREFERENCE_ATT_MASTER SET LABEL_NAME = ?, ATT_REQUIRED= ? WHERE PREF_ATT_ID = ? AND PREF_TYPE_ID = ?  
USER.PREF.ADDITIONAL.ATTRIBUTE.UPDATE = UPDATE PREFERENCE_ATT_MASTER SET PREF_ATT_NAME = ?, LABEL_NAME = ?, PREF_ATT_SIZE = ?, PREF_ATT_DATA_TYPE = ? , ATTRIBUTE_TYPE = ?, OPTIONS= ?, UPDATE_TIME = SYSDATE WHERE PREF_ATT_ID = ? AND PREF_TYPE_ID = ? 
USER.PREF.ATTRIBUTE.DELETE = UPDATE PREFERENCE_ATT_MASTER SET DELETE_FLAG = 'Y' WHERE PREF_ATT_ID = ? AND PREF_TYPE_ID = ?

USER.PREF.TXN.INSERT = INSERT INTO PREFERENCE_ATT_TRANS(PREF_ATT_TRANS_ID, PREF_ATT_ID, CREATE_TIME, ATTRIBUTE_VALUE, ACCOUNT_ID) VALUES((SELECT NVL(MAX(PREF_ATT_TRANS_ID),0)+1 FROM PREFERENCE_ATT_TRANS), ?, SYSDATE, ?, ?)
USER.PREF.ACCT.FIND_MAX_ACCT_ID = SELECT MAX(ACCOUNT_ID) ACCOUNT_ID FROM PREFERENCE_ACCOUNT
USER.PREF.ACCT.INSERT = INSERT INTO PREFERENCE_ACCOUNT(ACCOUNT_ID, ACCOUNT_NAME, ID, PREFERENCE_TYPE_ID) VALUES((SELECT NVL(MAX(ACCOUNT_ID),0)+1 FROM PREFERENCE_ACCOUNT), ?, ?, ?)
USER.TXN.INSERT = INSERT INTO USER_ATTRIBUTE_TRANSACTION(USER_ATT_TXN_ID, ID, USER_ATT_ID, CREATE_TIME, UPDATE_TIME, ATTRIBUTE_VALUE) VALUES ((SELECT NVL(MAX(USER_ATT_TXN_ID),0)+1 FROM USER_ATTRIBUTE_TRANSACTION),?,?,SYSDATE,SYSDATE,?)
USER.ADDR.INSERT = INSERT INTO USER_ADDRESS(ADDRESS_ID, ID, ADDRESS1, CITY, STATE, COUNTRY, ZIP, PHONE, EMAIL, DELETE_FLAG, CREATE_TIME, UPDATE_TIME) VALUES((SELECT NVL(MAX(ADDRESS_ID),0)+1 FROM USER_ADDRESS), ?, ?, ?, ?, ?, ?, ?, ?, ?, SYSDATE, SYSDATE)
USER.FIND_MAX_ID = SELECT MAX(ID) ID FROM USER_TABLE
USER.INSERT = INSERT INTO USER_TABLE(ID, USER_TYPE_ID, USER_NAME, PASSWORD, FIRST_NAME, MIDDLE_NAME, LASTNAME, PREFIX, SUFFIX, BIRTH_DATE, DELETE_FLAG, CREATE_TIME, UPDATE_TIME, SSN, ANSWER, MYREGIONS, SECURITY_QUESTION) VALUES((SELECT NVL(MAX(ID),0)+1 FROM USER_TABLE), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, SYSDATE, SYSDATE, ?, ?, ?, ?)
USER.FIND_ALL = SELECT ID,USER_NAME,PASSWORD,FIRST_NAME,MIDDLE_NAME,LASTNAME,PREFIX,SUFFIX,BIRTH_DATE,SSN,ANSWER,MYREGIONS,SECURITY_QUESTION FROM USER_TABLE WHERE DELETE_FLAG = 'N' AND USER_TYPE_ID = ?
USER.FIND_ALL_ADDR = SELECT ADDRESS1,ADDRESS2,SUITE_ROOM,CITY,STATE,COUNTRY,ZIP,PHONE,EMAIL FROM USER_ADDRESS WHERE DELETE_FLAG = 'N' AND ID = ?
USER.FIND_ALL_GROUP = SELECT GROUP_NAME,GROUP_ID FROM GROUP_MASTER WHERE GROUP_ID IN (SELECT GROUP_ID FROM USER_GROUP_MAP WHERE ID = ?)
USER.FIND_ALL_USER_ATTS = SELECT UAM.USER_ATT_NAME,UAT.USER_ATT_ID,UAT.ATTRIBUTE_VALUE FROM USER_ATTRIBUTE_MASTER UAM, USER_ATTRIBUTE_TRANSACTION UAT WHERE ID = ? AND UAM.USER_ATT_ID = UAT.USER_ATT_ID ORDER BY UAT.USER_ATT_ID
USER.FIND_ACCT = SELECT ACCOUNT_NAME,ACCOUNT_ID,PREFERENCE_TYPE_ID FROM PREFERENCE_ACCOUNT WHERE ID = ? ORDER BY PREFERENCE_TYPE_ID
USER.FIND_PREF = SELECT ATTRIBUTE_VALUE FROM PREFERENCE_ATT_TRANS WHERE ACCOUNT_ID = ?

USER.ENGAGEMENT.EXPERT.INSERT = INSERT INTO USER_ENGAGEMENT (ID,EVENT_ID,ACCEPTED_INVITATION,CREATE_TIME,UPDATE_TIME,LECTURE_TOPICS)VALUES (?,?,?,SYSDATE,SYSDATE,?)
USER.ENGAGEMENT.EXPERT.UPDATE = UPDATE USER_ENGAGEMENT SET ACCEPTED_INVITATION='C' WHERE EVENT_ID=?

# Queries for Email Template Functionality

EMAIL.GETEMAILTAGS.SELECT = SELECT TAG_ID, TAG_NAME FROM EMAIL_TAGS
EMAIL.TEMPLATE.INSERT = INSERT INTO EMAIL_TEMPLATE(TEMPLATE_ID, TEMPLATE_NAME, TEMPLATE_DESC, TEMPLATE_LOCATION, CREATE_TIME, UPDATE_TIME, MANDATORY_FIELD) VALUES((SELECT NVL(MAX(TEMPLATE_ID),0)+1 FROM EMAIL_TEMPLATE), ?, ?, ?, SYSDATE, SYSDATE, 'N')
EMAIL.TEMPLATE.SELECT = SELECT TEMPLATE_ID, TEMPLATE_NAME, TEMPLATE_DESC, MANDATORY_FIELD FROM EMAIL_TEMPLATE
EMAIL.TEMPLATE.GETEDITINFO = SELECT TEMPLATE_ID, TEMPLATE_NAME, TEMPLATE_DESC, TEMPLATE_LOCATION, MANDATORY_FIELD FROM EMAIL_TEMPLATE WHERE TEMPLATE_ID = ?
EMAIL.TEMPLATE.UPDATE = UPDATE EMAIL_TEMPLATE SET TEMPLATE_NAME = ?, TEMPLATE_DESC = ?, TEMPLATE_LOCATION = ?, UPDATE_TIME = SYSDATE WHERE TEMPLATE_ID = ?
EMAIL.TEMPLATE.DELETE = DELETE FROM EMAIL_TEMPLATE WHERE TEMPLATE_ID = ?

##### Queries for Venue Section Functionality############
VENUE.SECMASTER.INSERT = INSERT INTO VENUE_SECTION_MASTER(VEN_SECTION_ID,VEN_SECTION_NAME,VEN_SECTION_DESC,MANDATORY_SECTION,DELETE_FLAG,CREATE_TIME,UPDATE_TIME) VALUES ((SELECT NVL(MAX(VEN_SECTION_ID),0)+1 FROM VENUE_SECTION_MASTER),?,?,'N','N',SYSDATE,SYSDATE)
VENUE.SECMASTER.UPDATE = UPDATE VENUE_SECTION_MASTER SET VEN_SECTION_NAME=?, VEN_SECTION_DESC=?, UPDATE_TIME=SYSDATE WHERE VEN_SECTION_ID=?
VENUE.SECMASTER.DELETE = UPDATE VENUE_SECTION_MASTER SET DELETE_FLAG='Y' WHERE VEN_SECTION_ID=?
VENUE.SECMASTER.SELECT = SELECT VEN_SECTION_ID,VEN_SECTION_NAME,VEN_SECTION_DESC,MANDATORY_SECTION FROM VENUE_SECTION_MASTER WHERE DELETE_FLAG = 'N' ORDER BY VEN_SECTION_NAME
VENUE.SECMASTER.FINDBY_VEN_SEC_ID = SELECT VEN_SECTION_ID,VEN_SECTION_NAME,VEN_SECTION_DESC,MANDATORY_SECTION FROM VENUE_SECTION_MASTER WHERE VEN_SECTION_ID = ?
VENUE.SECMASTER.FIND_SEC_ID = SELECT VEN_SECTION_ID FROM VENUE_SECTION_MASTER ORDER BY VEN_SECTION_ID

##### Queries for Venue Section Attributes Functionality############
VENUE.ATTRIBUTE.BASIC.SELECT = SELECT VEN_SECTION_ID, VENUE_ATT_ID, VENUE_ATT_NAME, LABEL_NAME, VENUE_ATT_SIZE, VENUE_ATT_DATA_TYPE, ATT_REQUIRED, ATTRIBUTE_TYPE, OPTIONS FROM VENUE_ATTRIBUTE_MASTER WHERE DELETE_FLAG = 'N' AND MANDATORY_FIELD = 'Y' AND VEN_SECTION_ID = ? ORDER BY VENUE_ATT_ID
VENUE.ATTRIBUTE.ADDITIONAL.SELECT = SELECT VEN_SECTION_ID, VENUE_ATT_ID, VENUE_ATT_NAME, LABEL_NAME, VENUE_ATT_SIZE, VENUE_ATT_DATA_TYPE, ATT_REQUIRED, ATTRIBUTE_TYPE, OPTIONS FROM VENUE_ATTRIBUTE_MASTER WHERE DELETE_FLAG = 'N' AND MANDATORY_FIELD = 'N' AND VEN_SECTION_ID = ? ORDER BY VENUE_ATT_ID
VENUE.ATTRIBUTE.INSERT = INSERT INTO VENUE_ATTRIBUTE_MASTER (VENUE_ATT_ID, VEN_SECTION_ID, VENUE_ATT_NAME, VENUE_ATT_DESC, LABEL_NAME, VENUE_ATT_SIZE, VENUE_ATT_DATA_TYPE, ATTRIBUTE_TYPE, OPTIONS, ATT_REQUIRED, MANDATORY_FIELD, ATTRIBUTE_FOR_EVENT, DELETE_FLAG, CREATE_TIME, UPDATE_TIME) VALUES((SELECT NVL(MAX(VENUE_ATT_ID),0)+1 FROM VENUE_ATTRIBUTE_MASTER),?,?,?,?,?,?,?,?,'Y','N','N','N',SYSDATE,SYSDATE)
VENUE.ATTRIBUTE.BASIC.UPDATE = UPDATE VENUE_ATTRIBUTE_MASTER SET LABEL_NAME = ?, ATT_REQUIRED = ? WHERE VENUE_ATT_ID = ?
VENUE.ATTRIBUTE.ADDITIONAL.UPDATE = UPDATE VENUE_ATTRIBUTE_MASTER SET VENUE_ATT_NAME = ?,LABEL_NAME = ?, VENUE_ATT_SIZE = ?, VENUE_ATT_DATA_TYPE = ? ,ATTRIBUTE_TYPE = ?, OPTIONS = ?, UPDATE_TIME = SYSDATE WHERE VENUE_ATT_ID = ?
VENUE.ATTRIBUTE.DELETE = UPDATE VENUE_ATTRIBUTE_MASTER SET DELETE_FLAG = 'Y' WHERE VENUE_ATT_ID =?
VENUE.ATT.SELECT_ATT_ID = SELECT VENUE_ATT_ID FROM VENUE_ATTRIBUTE_MASTER
VENUE.ATT.DUPLICATE = SELECT VENUE_ATT_NAME FROM VENUE_ATTRIBUTE_MASTER WHERE VEN_SECTION_ID=? AND DELETE_FLAG='N'

##### Queries for Venue Attribute Transaction Functionality############
VENUE.TXN.FIND_TXN = SELECT VENUE_ATT_TXN_ID, VEN_TXN.VENUE_ID VENUE_ID, VENUE_ATT_ID, ATTRIBUTE_VALUE, VENUE_NAME FROM VENUE_ATTRIBUTE_TRANSACTION VEN_TXN, VENUE VEN WHERE VEN_TXN.VENUE_ID = VEN.VENUE_ID AND VEN_TXN.VENUE_ID = ?
VENUE.TXN.INSERT = INSERT INTO VENUE_ATTRIBUTE_TRANSACTION (VENUE_ATT_TXN_ID, VENUE_ID, VENUE_ATT_ID, ATTRIBUTE_VALUE, CREATE_TIME, UPDATE_TIME) VALUES ((SELECT NVL(MAX(VENUE_ATT_TXN_ID),0)+1 FROM VENUE_ATTRIBUTE_TRANSACTION),?,?,?,SYSDATE,SYSDATE)
VENUE.TXN.UPDATE = UPDATE VENUE_ATTRIBUTE_TRANSACTION SET ATTRIBUTE_VALUE = ?, UPDATE_TIME = SYSDATE WHERE VENUE_ID = ? AND VENUE_ATT_ID = ?
VENUE.TXN.SELECT = SELECT VENUE_ID, VENUE_ATT_ID, ATTRIBUTE_VALUE FROM VENUE_ATTRIBUTE_TRANSACTION WHERE VENUE_ID = ?
VENUE.TXN.DELETE = DELETE FROM VENUE_ATTRIBUTE_TRANSACTION WHERE VENUE_ID = ?

##### Queries for Venue Functionality############
VENUE.INSERT = INSERT INTO VENUE(VENUE_ID,VENUE_NAME,CREATE_TIME,UPDATE_TIME) VALUES ((SELECT NVL(MAX(VENUE_ID),0)+1 FROM VENUE),?,SYSDATE,SYSDATE)
VENUE.UPDATE = UPDATE VENUE SET VENUE_NAME = ? WHERE VENUE_ID = ?
VENUE.SELECT = SELECT VENUE_ID,VENUE_NAME FROM VENUE ORDER BY VENUE_NAME
VENUE.FINDBY_VEN_NAME = SELECT VENUE_ID FROM VENUE WHERE VENUE_NAME = ?
VENUE.DELETE = DELETE FROM VENUE WHERE VENUE_ID = ?
VENUE.FIND_MAX_VENUE_ID = SELECT MAX(VENUE_ID) VENUE_ID FROM VENUE

##### Queries for EventManagement Functionality############

# Hierarchy relatetd queries

EVENTMANAGEMENT.HIERARCHY.GETHIERARCHY =  SELECT PARENT_ID,HIERARCHY_ID,HIERARCHY_NAME,EVENT_TYPE_ID FROM EVENT_HIERARCHY WHERE DELETE_FLAG='N' AND HIERARCHY_ID > 0 GROUP BY PARENT_ID,HIERARCHY_ID,HIERARCHY_NAME,EVENT_TYPE_ID
EVENTMANAGEMENT.HIERARCHY.GETROOTHIERARCHY = SELECT HIERARCHY_ID,HIERARCHY_NAME FROM EVENT_HIERARCHY WHERE PARENT_ID =? AND DELETE_FLAG='N' AND HIERARCHY_ID > 0 
EVENTMANAGEMENT.EVENTTYPE.FINDALL=SELECT EVENT_TYPE_ID, EVENT_TYPE_NAME FROM EVENT_TYPE WHERE EVENT_TYPE_ID > 0
EVENTMANAGEMENT.HIERARCHY.GETCHILD =SELECT A.PARENT_ID,A.HIERARCHY_ID,A.HIERARCHY_NAME,A.HIERARCHY_DESC,A.EVENT_TYPE_ID,B.EVENT_TYPE_NAME FROM EVENT_HIERARCHY  A ,EVENT_TYPE B WHERE PARENT_ID =? AND DELETE_FLAG='N' AND A.HIERARCHY_ID > 0 AND A.EVENT_TYPE_ID =B.EVENT_TYPE_ID
EVENTMANAGEMENT.HIERARCHY.INSERT=INSERT INTO EVENT_HIERARCHY(HIERARCHY_ID, PARENT_ID, EVENT_TYPE_ID, HIERARCHY_NAME, HIERARCHY_DESC, DELETE_FLAG, CREATE_TIME, UPDATE_TIME)VALUES ((SELECT NVL(MAX(HIERARCHY_ID),0)+1 FROM EVENT_HIERARCHY),?,?,?,?,?,SYSDATE,SYSDATE)
EVENTMANAGEMENT.HIERARCHY.UPDATE=UPDATE EVENT_HIERARCHY SET HIERARCHY_NAME = ?,HIERARCHY_DESC = ?,EVENT_TYPE_ID = ?,UPDATE_TIME = SYSDATE WHERE  HIERARCHY_ID=?
EVENTMANAGEMENT.HIERARCHY.DELETE=UPDATE EVENT_HIERARCHY SET DELETE_FLAG='Y' WHERE HIERARCHY_ID IN(SELECT HIERARCHY_ID FROM EVENT_HIERARCHY START WITH HIERARCHY_ID=? CONNECT BY PRIOR HIERARCHY_ID=PARENT_ID)

#Customise Attribute related queries

EVENTMANAGEMENT.SECTION.GETCHILD= SELECT A.EVENT_SECTION_ID,A.EVENT_SECTION_NAME,A.EVENT_SECTION_DESC,A.MANDATORY_SECTION,B.EVENT_TYPE_NAME FROM EVENT_SECTION_MASTER A,EVENT_TYPE B WHERE A.EVENT_TYPE_ID=? and (A.HIERARCHY_ID=0 or A.HIERARCHY_ID=?) AND DELETE_FLAG='N' AND A.EVENT_TYPE_ID = B.EVENT_TYPE_ID
EVENTMANAGEMENT.SECTION.INSERT=INSERT INTO EVENT_SECTION_MASTER (EVENT_SECTION_ID,EVENT_TYPE_ID, HIERARCHY_ID, EVENT_SECTION_NAME, EVENT_SECTION_DESC, MANDATORY_SECTION, DELETE_FLAG, CREATE_TIME, UPDATE_TIME)VALUES ((SELECT NVL(MAX(EVENT_SECTION_ID),0)+1 FROM EVENT_SECTION_MASTER),?,?,?,?,?,?,SYSDATE,SYSDATE)
EVENTMANAGEMENT.SECTION.GETSECTIONDETAILS = SELECT EVENT_SECTION_ID,EVENT_SECTION_NAME,EVENT_SECTION_DESC,EVENT_TYPE_ID FROM EVENT_SECTION_MASTER WHERE DELETE_FLAG='N' AND EVENT_SECTION_ID = ?
EVENTMANAGEMENT.SECTION.UPDATE= UPDATE EVENT_SECTION_MASTER SET EVENT_SECTION_NAME=?,EVENT_SECTION_DESC =?,UPDATE_TIME = SYSDATE WHERE EVENT_SECTION_ID=?
EVENTMANAGEMENT.SECTION.DELETE=UPDATE EVENT_SECTION_MASTER SET DELETE_FLAG = 'Y' WHERE EVENT_SECTION_ID=?
EVENTMANAGEMENT.SECTION.EDIT.SELECT =SELECT EVENT_SECTION_NAME ,EVENT_SECTION_DESC FROM EVENT_SECTION_MASTER WHERE EVENT_SECTION_ID = ?
EVENTMANAGEMENT.SECTION.DUPLICATE=SELECT EVENT_SECTION_NAME FROM EVENT_SECTION_MASTER WHERE EVENT_SECTION_NAME =? AND HIERARCHY_ID=?

EVENTMANAGEMENT.HIERARCHY.SECTIONS =SELECT EVENT_TYPE_ID,HIERARCHY_ID,EVENT_SECTION_ID,EVENT_SECTION_NAME FROM EVENT_SECTION_MASTER WHERE DELETE_FLAG='N' GROUP BY EVENT_TYPE_ID,HIERARCHY_ID,EVENT_SECTION_ID,EVENT_SECTION_NAME
EVENTMANAGEMENT.ATTRIBUTE.SELECT = SELECT EVENT_ATT_ID, EVENT_ATT_NAME,LABEL_NAME,EVENT_ATT_SIZE, EVENT_ATT_DATA_TYPE, ATTRIBUTE_TYPE, OPTIONS, MANDATORY_FIELD,ATT_REQUIRED,SEARCH_FIELD,HIERARCHY_ID FROM EVENT_ATTRIBUTE_MASTER WHERE EVENT_SECTION_ID = ? AND (HIERARCHY_ID =0 OR HIERARCHY_ID =?) AND DELETE_FLAG='N' ORDER BY EVENT_ATT_ID

EVENTMANAGEMENT.ADDITIONAL.ATTRIBUTE.UPDATE =UPDATE EVENT_ATTRIBUTE_MASTER SET EVENT_ATT_NAME =?, LABEL_NAME =?, EVENT_ATT_SIZE =?,EVENT_ATT_DATA_TYPE =? ,ATTRIBUTE_TYPE=?, OPTIONS=?, SEARCH_FIELD = ?, UPDATE_TIME =SYSDATE WHERE EVENT_ATT_ID =? AND EVENT_SECTION_ID = ? AND HIERARCHY_ID =? 
EVENTMANAGEMENT.BASIC.ATTRIBUTE.UPDATE =UPDATE EVENT_ATTRIBUTE_MASTER SET LABEL_NAME =?, ATT_REQUIRED= ? , SEARCH_FIELD = ? WHERE EVENT_ATT_ID =? AND EVENT_SECTION_ID = ? AND HIERARCHY_ID =?
			
EVENTMANAGEMENT.ATTRIBUTE.DELETE =UPDATE EVENT_ATTRIBUTE_MASTER SET DELETE_FLAG='Y' WHERE EVENT_ATT_ID =? 
EVENTMANAGEMENT.ATTRIBUTE.INSERT =INSERT INTO EVENT_ATTRIBUTE_MASTER (EVENT_ATT_ID, HIERARCHY_ID,EVENT_SECTION_ID, EVENT_ATT_NAME, EVENT_ATT_DESC, LABEL_NAME, EVENT_ATT_SIZE,EVENT_ATT_DATA_TYPE,ATTRIBUTE_TYPE,OPTIONS,ATT_REQUIRED, SEARCH_FIELD,MANDATORY_FIELD,DELETE_FLAG,CREATE_TIME, UPDATE_TIME) VALUES((SELECT NVL(MAX(EVENT_ATT_ID),0)+1 FROM EVENT_ATTRIBUTE_MASTER),?,?,?,?,?,?,?,?,?,'Y','N','N','N',SYSDATE,SYSDATE)

EVENTMANAGEMENT.VENUE.ATTRIBUTE.UPDATE =UPDATE VENUE_ATTRIBUTE_MASTER SET ATTRIBUTE_FOR_EVENT=? WHERE VENUE_ATT_ID =?
EVENTMANAGEMENT.VENUE.ATTRIBUTE.SELECT =SELECT VENUE_ATT_ID, VENUE_ATT_NAME, LABEL_NAME, VENUE_ATT_SIZE, VENUE_ATT_DATA_TYPE, ATTRIBUTE_TYPE, ATTRIBUTE_FOR_EVENT FROM VENUE_ATTRIBUTE_MASTER WHERE  ATT_REQUIRED ='Y' AND DELETE_FLAG='N' ORDER BY VENUE_ATT_ID

######## Queries related to Evaluation Module ###############

EVALUATION.QUESTION.INSERT =INSERT INTO QUESTION_MASTER(QUESTION_ID, QUESTION, ANSWER_TYPE, MIN_SCORE,MAX_SCORE,WEIGHT,CREATE_TIME,UPDATE_TIME,DELETE_FLAG ) VALUES((SELECT NVL(MAX(QUESTION_ID),0)+1 FROM QUESTION_MASTER),?,?,?,?,?,sysdate,sysdate,'N')
EVALUATION.QUESTION.SELECT =SELECT QUESTION_ID, QUESTION, ANSWER_TYPE,MIN_SCORE,MAX_SCORE,WEIGHT FROM QUESTION_MASTER WHERE DELETE_FLAG='N'
EVALUATION.QUESTION.EDIT =UPDATE QUESTION_MASTER SET QUESTION= ?,ANSWER_TYPE= ?,MIN_SCORE =?,MAX_SCORE =? ,WEIGHT = ? WHERE QUESTION_ID =?
EVALUATION.QUESTION.EDIT.SELECT =SELECT QUESTION_ID, QUESTION, ANSWER_TYPE,MIN_SCORE,MAX_SCORE,WEIGHT FROM QUESTION_MASTER WHERE QUESTION_ID=? 
EVALUATION.QUESTION.DELETE =UPDATE QUESTION_MASTER SET DELETE_FLAG ='Y' WHERE QUESTION_ID=?

EVALUATION.SECTION.SELECT=SELECT A.EVAL_SECTION_ID,A.EVAL_SECTION_NAME,A.EVAL_SECTION_DESC,A.SCORE,A.WEIGHT,B.SECTION_TYPE_NAME FROM EVALUATION_SECTION_MASTER A,EVALUATION_SECTION_TYPE B WHERE A.EVAL_SECTION_TYPE_ID = B.EVAL_SECTION_TYPE_ID AND A.DELETE_FLAG='N'
EVALUATION.SECTION.FINDALLSECTIONTYPE=SELECT EVAL_SECTION_TYPE_ID,SECTION_TYPE_NAME FROM EVALUATION_SECTION_TYPE 
EVALUATION.SECTION.DELETE=UPDATE EVALUATION_SECTION_MASTER SET DELETE_FLAG ='Y' WHERE EVAL_SECTION_ID=?
EVALUATION.SECTION.EDIT.SELECT=SELECT A.EVAL_SECTION_ID,A.EVAL_SECTION_NAME,A.EVAL_SECTION_DESC,A.WEIGHT,A.SCORE,B.SECTION_TYPE_NAME,B.EVAL_SECTION_TYPE_ID FROM EVALUATION_SECTION_MASTER A,EVALUATION_SECTION_TYPE B WHERE A.EVAL_SECTION_TYPE_ID = B.EVAL_SECTION_TYPE_ID AND A.DELETE_FLAG='N'AND A.EVAL_SECTION_ID =?
EVALUATION.SECTION.MODIFY=UPDATE EVALUATION_SECTION_MASTER SET EVAL_SECTION_NAME=?,EVAL_SECTION_DESC=?,WEIGHT=?,EVAL_SECTION_TYPE_ID=? WHERE EVAL_SECTION_ID=?
EVALUATION.SECTION.INSERT=INSERT INTO EVALUATION_SECTION_MASTER(EVAL_SECTION_ID, EVAL_SECTION_NAME, EVAL_SECTION_DESC, WEIGHT,EVAL_SECTION_TYPE_ID, DELETE_FLAG,CREATE_TIME, UPDATE_TIME)VALUES((SELECT NVL(MAX(EVAL_SECTION_ID),0)+1 FROM EVALUATION_SECTION_MASTER),?,?,?,?,'N',SYSDATE,SYSDATE)

EVALUATION.FORMBUILDER.GETSECTIONNAME=SELECT EVAL_SECTION_ID,EVAL_SECTION_NAME FROM EVALUATION_SECTION_MASTER WHERE EVAL_SECTION_TYPE_ID=? AND DELETE_FLAG='N'
EVALUATION.FORMBUILDER.INSERT=INSERT INTO EVALUATION_FORM_MASTER(EVALUATION_ID, HIERARCHY_ID, EVAL_SECTION_ID,QUESTION_ID)VALUES ((SELECT NVL(MAX(EVALUATION_ID),0)+1 FROM EVALUATION_FORM_MASTER),?,?,?)
EVALUATION.FORMBUILDER.SELECTALL=SELECT A.QUESTION_ID,A.QUESTION,C.EVAL_SECTION_NAME,C.EVAL_SECTION_ID,D.SECTION_TYPE_NAME,D.EVAL_SECTION_TYPE_ID,B.EVALUATION_ID FROM QUESTION_MASTER A,EVALUATION_FORM_MASTER B,EVALUATION_SECTION_MASTER C,EVALUATION_SECTION_TYPE D WHERE A.QUESTION_ID = B.QUESTION_ID AND B.EVAL_SECTION_ID = C.EVAL_SECTION_ID AND D.EVAL_SECTION_TYPE_ID = C.EVAL_SECTION_TYPE_ID AND B.HIERARCHY_ID =? GROUP BY D.SECTION_TYPE_NAME,C.EVAL_SECTION_NAME,A.QUESTION,A.QUESTION_ID,C.EVAL_SECTION_ID,D.EVAL_SECTION_TYPE_ID,B.EVALUATION_ID
EVALUATION.FORMBUILDER.DELETE=DELETE FROM EVALUATION_FORM_MASTER WHERE EVALUATION_ID = ?

EVALUATION.FORM.SELECT =SELECT C.EVALUATION_ID,A.EVAL_SECTION_NAME,B.QUESTION,B.ANSWER_TYPE,B.MIN_SCORE,B.MAX_SCORE ,D.SECTION_TYPE_NAME FROM EVALUATION_SECTION_MASTER A,QUESTION_MASTER B,EVALUATION_FORM_MASTER C, EVALUATION_SECTION_TYPE D WHERE A.EVAL_SECTION_ID= C.EVAL_SECTION_ID AND B.QUESTION_ID=C.QUESTION_ID AND HIERARCHY_ID=? AND D.EVAL_SECTION_TYPE_ID=A. EVAL_SECTION_TYPE_ID GROUP BY D.SECTION_TYPE_NAME,A.EVAL_SECTION_NAME,B.QUESTION,B.ANSWER_TYPE,B.MIN_SCORE,B.MAX_SCORE,C.EVALUATION_ID
EVALUATION.USER.EVALUATE =INSERT INTO QUESTIONNAIRE_ANSWER(ID,EVENT_ID, EVALUATION_ID, ANSWER_NUM, ANSWER_TEXT,CREATE_TIME )VALUES (?,?,?,?,?,SYSDATE)

########Queries related to Payment Module###############

PAYMENT.STDAMOUNT.SELECT=SELECT A.ID ,B.FIRST_NAME, B.LASTNAME, A.GROUP_ID ,C.GROUP_NAME,A.ATTRIBUTE_VALUE FROM USER_ATTRIBUTE_TRANSACTION A,USER_TABLE B,GROUP_MASTER C WHERE A.USER_ATT_ID=16 AND A.ID=B.ID AND A.GROUP_ID =C.GROUP_ID
PAYMENT.STDAMOUNT.INSERT=INSERT INTO USER_ATTRIBUTE_TRANSACTION(USER_ATT_TXN_ID, ID, USER_ATT_ID, ATTRIBUTE_VALUE, CREATE_TIME, UPDATE_TIME, GROUP_ID)VALUES ((SELECT NVL(MAX(USER_ATT_TXN_ID),0)+1 FROM USER_ATTRIBUTE_TRANSACTION),?,16,?,SYSDATE,SYSDATE,?) 
PAYMENT.STDAMOUNT.DELETE=DELETE FROM USER_ATTRIBUTE_TRANSACTION WHERE ID=?
PAYMENT.STDAMOUNT.SELECT.FOREDIT=SELECT A.ID,B.USER_NAME, A.GROUP_ID ,C.GROUP_NAME,A.ATTRIBUTE_VALUE FROM USER_ATTRIBUTE_TRANSACTION A,USER_TABLE B,GROUP_MASTER C WHERE A.USER_ATT_ID=16 AND A.ID=B.ID AND A.GROUP_ID =C.GROUP_ID AND A.ID =?
PAYMENT.STDAMOUNT.UPDATE=UPDATE USER_ATTRIBUTE_TRANSACTION SET ATTRIBUTE_VALUE=? WHERE USER_ATT_ID=16 AND ID=?

PAYMENT.VARAMOUNT.FETCH = select vppm.PAYMENT_PROCESS_ID, vppm.MIN_VALUE, vppm.MAX_VALUE, vppm.PAYMENT_PROCESS_TYPE, vppd.PROCESS_SEQUENCE, vppd.payment_process_id as processid,vppd.APPROVER_ID, ut.FIRST_NAME,ut.LASTNAME from VAR_PAYMENT_PROCESS_MASTER vppm, VAR_PAYMENT_PROCESS_DETAIL vppd,user_table ut where vppm.PAYMENT_PROCESS_ID = vppd.PAYMENT_PROCESS_ID and vppd.APPROVER_ID = ut.ID union  select PAYMENT_PROCESS_ID, MIN_VALUE, MAX_VALUE, PAYMENT_PROCESS_TYPE, null as PROCESS_SEQUENCE, null as processid, null as APPROVER_ID, null, null from  VAR_PAYMENT_PROCESS_MASTER where  PAYMENT_PROCESS_ID not in (select vpd1.PAYMENT_PROCESS_ID from VAR_PAYMENT_PROCESS_DETAIL vpd1) order by PAYMENT_PROCESS_ID, PROCESS_SEQUENCE asc
PAYMENT.VARAMOUNT.DELETE_DETAIL = delete from VAR_PAYMENT_PROCESS_DETAIL where PAYMENT_PROCESS_ID = ? 
PAYMENT.VARAMOUNT.DELETE_MASTER = delete from VAR_PAYMENT_PROCESS_MASTER where PAYMENT_PROCESS_ID = ? 
PAYMENT.VARAMOUNT.ADD_MASTER = insert into VAR_PAYMENT_PROCESS_MASTER(PAYMENT_PROCESS_ID,MIN_VALUE, MAX_VALUE, PAYMENT_PROCESS_TYPE, CREATE_TIME, UPDATE_TIME) values((SELECT NVL(MAX(PAYMENT_PROCESS_ID),0)+1 FROM VAR_PAYMENT_PROCESS_MASTER), ?, ?, ?, sysdate, sysdate )
PAYMENT.VARAMOUNT.ADD_DETAIL = insert into VAR_PAYMENT_PROCESS_DETAIL(VPP_DETAIL_ID,PAYMENT_PROCESS_ID, APPROVER_ID, PROCESS_SEQUENCE, CREATE_TIME, UPDATE_TIME) values((SELECT NVL(MAX(VPP_DETAIL_ID),0)+1 FROM VAR_PAYMENT_PROCESS_DETAIL), (select max(PAYMENT_PROCESS_ID) from VAR_PAYMENT_PROCESS_MASTER), ?, ?, sysdate, sysdate )
PAYMENT.VARAMOUNT.FETCHSINGLE = select vppm.PAYMENT_PROCESS_ID, vppm.MIN_VALUE, vppm.MAX_VALUE, vppm.PAYMENT_PROCESS_TYPE from VAR_PAYMENT_PROCESS_MASTER vppm where vppm.PAYMENT_PROCESS_ID = ?
PAYMENT.VARAMOUNT.FETCHAPPROVERS_BY_PROCESSID = select vppd.PROCESS_SEQUENCE, vppd.payment_process_id as processid, vppd.APPROVER_ID, ut.USER_NAME as approvername from VAR_PAYMENT_PROCESS_DETAIL vppd,user_table ut where vppd.PAYMENT_PROCESS_ID=? and vppd.APPROVER_ID = ut.ID
PAYMENT.VARAMOUNT.FETCHAPPROVERS = select approver_id from VAR_PAYMENT_PROCESS_DETAIL where PAYMENT_PROCESS_ID=?
PAYMENT.VARAMOUNT.ADD_APPROVER = insert into VAR_PAYMENT_PROCESS_DETAIL(VPP_DETAIL_ID,PAYMENT_PROCESS_ID, APPROVER_ID, PROCESS_SEQUENCE, CREATE_TIME, UPDATE_TIME) values((SELECT NVL(MAX(VPP_DETAIL_ID),0)+1 FROM VAR_PAYMENT_PROCESS_DETAIL),?, ?, ?, sysdate, sysdate )
PAYMENT.VARAMOUNT.UPDATE_APPROVER = update VAR_PAYMENT_PROCESS_DETAIL set PROCESS_SEQUENCE = ?  where   PAYMENT_PROCESS_ID = ? and approver_id=?
PAYMENT.VARAMOUNT.DELETE_APPROVER = delete from  VAR_PAYMENT_PROCESS_DETAIL where approver_id=? and PAYMENT_PROCESS_ID=?
PAYMENT.VARAMOUNT.APPROVE = UPDATE EVENT SET STATUS_ID=? WHERE EVENT_ID=?
PAYMENT.TRANS.INSERT = INSERT INTO VAR_PAYMENT_PROCESS_TRANS(VP_TXN_ID,VPP_DETAIL_ID,EVENT_ID,APPROVAL_STATUS,CREATE_TIME,UPDATE_TIME,PROCESS_SEQUENCE,EXPERT_ID,OVERRIDE_AMOUNT) VALUES((SELECT NVL(MAX(VP_TXN_ID),0)+1 FROM VAR_PAYMENT_PROCESS_TRANS),?,?,?,SYSDATE,SYSDATE,?,?,?)
PAYMENT.VPP_DETAIL.SELECT = SELECT VPP_DETAIL_ID, PAYMENT_PROCESS_TYPE, APPROVER_ID, PROCESS_SEQUENCE, EMAIL, T1.USER_NAME, T2.FIRST_NAME , T2.LASTNAME FROM VAR_PAYMENT_PROCESS_MASTER M, VAR_PAYMENT_PROCESS_DETAIL D, USER_ADDRESS A, USER_TABLE T1, USER_TABLE T2 WHERE D.PAYMENT_PROCESS_ID = M.PAYMENT_PROCESS_ID AND D.PAYMENT_PROCESS_ID IN (SELECT PAYMENT_PROCESS_ID FROM VAR_PAYMENT_PROCESS_MASTER WHERE ? BETWEEN MIN_VALUE AND MAX_VALUE) AND APPROVER_ID=A.ID AND A.ID=T1.ID AND T2.ID=? ORDER BY PROCESS_SEQUENCE
PAYMENT.TRANS.DELETE = DELETE FROM VAR_PAYMENT_PROCESS_TRANS WHERE EVENT_ID=? AND EXPERT_ID=?
PAYMENT.APPROVAL.STATUS.SELECT = SELECT APPROVAL_STATUS FROM VAR_PAYMENT_PROCESS_TRANS WHERE VPP_DETAIL_ID=? AND PROCESS_SEQUENCE=? AND EXPERT_ID=?

###### Queries for Calendar Module #######################

CALENDAR.HOLIDAY.INSERT= INSERT INTO CALENDAR_AGENDA (AGENDA_ID, AGENDA_TYPE_ID,ID,AGENDA_NAME,AGENDA_DESC,AGENDA_DATE,TOOL_TIP, ACTION,BACKGROUND_COLOR,FONT_COLOR, BACKGROUND_IMAGE, DISPLAY_MESSAGE,CREATE_TIME,UPDATE_TIME) VALUES((SELECT NVL(MAX(AGENDA_ID),0)+1 FROM CALENDAR_AGENDA ),1,?,?,?,?,?,?,?,?,?,?,SYSDATE,SYSDATE)
CALENDAR.HOLIDAY.UPDATE= UPDATE CALENDAR_AGENDA SET AGENDA_NAME=?,AGENDA_DESC=?,AGENDA_DATE =?,TOOL_TIP=?, ACTION=?, BACKGROUND_COLOR =?,FONT_COLOR=?, BACKGROUND_IMAGE=?, DISPLAY_MESSAGE=?,UPDATE_TIME=SYSDATE WHERE AGENDA_ID =?
CALENDAR.HOLIDAY.DELETE =DELETE FROM CALENDAR_AGENDA WHERE AGENDA_ID=?
CALENDAR.HOLIDAY.SELECTALL= SELECT AGENDA_ID,AGENDA_NAME,AGENDA_DESC,AGENDA_DATE FROM CALENDAR_AGENDA WHERE AGENDA_TYPE_ID=1 AND ID=0
CALENDAR.HOLIDAY.SELECT =SELECT AGENDA_NAME,AGENDA_DESC,AGENDA_DATE ,TOOL_TIP, ACTION, BACKGROUND_COLOR,FONT_COLOR, BACKGROUND_IMAGE,DISPLAY_MESSAGE FROM CALENDAR_AGENDA  WHERE AGENDA_ID =?
			
CALENDAR.PROPERTIES.SELECT =SELECT RANGE_FROM, RANGE_TO, RANGE_MESSAGE, FOCUS_BGCOLOR, MONDAY_COLOR, TUESDAY_COLOR, WEDNESDAY_COLOR, THURSDAY_COLOR, FRIDAY_COLOR, SATURDAY_COLOR, SUNDAY_COLOR FROM CALENDAR_PROPERTIES WHERE PROPERTY_ID=1
CALENDAR.PROPERTIES.UPDATE =UPDATE CALENDAR_PROPERTIES set RANGE_FROM=?, RANGE_TO=?, RANGE_MESSAGE=?, FOCUS_BGCOLOR=?,  MONDAY_COLOR=?, TUESDAY_COLOR=?, WEDNESDAY_COLOR=?,  THURSDAY_COLOR=?, FRIDAY_COLOR=?, SATURDAY_COLOR=?, SUNDAY_COLOR=? WHERE PROPERTY_ID=1

CALENDAR.AGENDA.SELECT = SELECT AGENDA_ID, AGENDA_TYPE_ID, ID, AGENDA_NAME, AGENDA_DESC, AGENDA_DATE, TOOL_TIP, ACTION, BACKGROUND_COLOR, FONT_COLOR, DISPLAY_MESSAGE,BACKGROUND_IMAGE FROM CALENDAR_AGENDA WHERE AGENDA_ID=?
CALENDAR.AGENDA.UPDATE =UPDATE CALENDAR_AGENDA SET TOOL_TIP=?, ACTION=?, BACKGROUND_COLOR=?, FONT_COLOR=?, DISPLAY_MESSAGE=?,BACKGROUND_IMAGE=? WHERE AGENDA_ID=?

############## Expert Calendar ################################

CALENDAR.EXPERT.AGENDA.SELECT =SELECT  A.TOOL_TIP,A.ACTION, A.FONT_COLOR, A.DISPLAY_MESSAGE, A.BACKGROUND_COLOR ,B.AGENDA_TYPE_ID,B.AGENDA_DATE FROM CALENDAR_AGENDA A,CALENDAR_AGENDA B WHERE A.AGENDA_TYPE_ID =B.AGENDA_TYPE_ID AND B.ID=? AND A.ID=0
CALENDAR.EXPERT.AGENDA.INSERT =INSERT INTO CALENDAR_AGENDA (AGENDA_ID,AGENDA_TYPE_ID,ID,AGENDA_NAME,AGENDA_DATE,CREATE_TIME,UPDATE_TIME) VALUES((SELECT NVL(MAX(AGENDA_ID),0)+1 FROM CALENDAR_AGENDA ),?,?,?,?,SYSDATE,SYSDATE)
CALENDAR.EXPERT.AGENDA.MODIFY =UPDATE CALENDAR_AGENDA SET AGENDA_TYPE_ID=? WHERE ID=? AND AGENDA_DATE=?
CALENDAR.EXPERT.AGENDA.DELETE =DELETE FROM  CALENDAR_AGENDA WHERE ID=? AND AGENDA_DATE=?
CALENDAR.EXPERT.LEGEND.SELECT =SELECT AGENDA_ID ,BACKGROUND_COLOR FROM CALENDAR_AGENDA WHERE ID=0 AND agenda_id in(6,7,8,1)

################################################ QUERIES for FRONT END ###################################################

########### Related to Profile ####################
USER.SECTION.GETSECTION.ACTIVE.ATTRIBUTES=SELECT UAM.USER_ATT_ID, UAM.USER_ATT_NAME, UAM.LABEL_NAME, UAM.USER_ATT_SIZE, UAM.USER_ATT_DATA_TYPE,UAM.ATTRIBUTE_TYPE, UAM.MANDATORY_FIELD, UAM.ATT_REQUIRED, USM.USER_TYPE_ID FROM USER_ATTRIBUTE_MASTER UAM, USER_SECTION_MASTER USM  WHERE UAM.USER_SECTION_ID = USM.USER_SECTION_ID AND UAM.USER_SECTION_ID = ? AND UAM.DELETE_FLAG='N' AND ATT_REQUIRED = 'Y' ORDER BY UAM.USER_ATT_ID
USER.SECTION.ATTRIBUTESVALUES=SELECT UAM.USER_ATT_ID, UAT.USER_ATT_TXN_ID, UAM.USER_ATT_NAME, UAM.LABEL_NAME, UAM.USER_ATT_SIZE,UAM.USER_ATT_DATA_TYPE, UAM.ATTRIBUTE_TYPE, UAM.MANDATORY_FIELD, UAM.ATT_REQUIRED, UAT.ATTRIBUTE_VALUE FROM USER_SECTION_MASTER USM, USER_ATTRIBUTE_MASTER UAM, USER_ATTRIBUTE_TRANSACTION UAT WHERE UAT.ID = ? AND USM.USER_SECTION_ID = ? AND USM.USER_TYPE_ID = ? AND USM.USER_SECTION_ID = UAM.USER_SECTION_ID AND UAM.USER_ATT_ID = UAT.USER_ATT_ID ORDER BY UAM.USER_ATT_ID
USER.SECTION.GETATTRIBUTES=SELECT USER_ATT_ID,USER_ATT_NAME,LABEL_NAME,MANDATORY_FIELD,USER_ATT_DATA_TYPE,USER_ATT_SIZE,ATT_REQUIRED,ATTRIBUTE_TYPE,OPTIONS FROM USER_ATTRIBUTE_MASTER WHERE USER_SECTION_ID=? AND DELETE_FLAG='N' ORDER BY USER_ATT_ID
USER.SECTION.GETATTRIBUTEVALUES=SELECT UAT.USER_ATT_TXN_ID,UAT.USER_ATT_ID,UAT.ATTRIBUTE_VALUE FROM USER_ATTRIBUTE_TRANSACTION UAT,USER_ATTRIBUTE_MASTER UAM WHERE UAT.USER_ATT_ID=UAM.USER_ATT_ID AND UAT.ID = ? AND UAM.USER_SECTION_ID=? GROUP BY UAT.USER_ATT_TXN_ID,UAT.USER_ATT_ID,UAT.ATTRIBUTE_VALUE
USER.SECTION.UPDATEATTRIBUTE_VALUES=UPDATE USER_ATTRIBUTE_TRANSACTION SET ATTRIBUTE_VALUE = ? WHERE USER_ATT_TXN_ID =?
USER.ATTRIBUTE.VALUES.INSERT = INSERT INTO USER_ATTRIBUTE_TRANSACTION (USER_ATT_TXN_ID, ID, USER_ATT_ID, CREATE_TIME, UPDATE_TIME, ATTRIBUTE_VALUE) VALUES ((SELECT NVL(MAX(USER_ATT_TXN_ID),0)+1 FROM USER_ATTRIBUTE_TRANSACTION), ?, ?, SYSDATE, SYSDATE, ?)
USER.ATTRIBUTE.VALUES.UPDATE = UPDATE USER_ATTRIBUTE_TRANSACTION SET ATTRIBUTE_VALUE = ?,  UPDATE_TIME = SYSDATE WHERE USER_ATT_ID = ? AND ID = ?
USER.CONTACTINFO.SELECT = SELECT U.ID, U.USER_TYPE_ID, U.USER_NAME, U.PASSWORD, U.FIRST_NAME, U.MIDDLE_NAME, U.LASTNAME, U.PREFIX, U.SUFFIX, U.BIRTH_DATE, AD.ADDRESS1, AD.PHONE, AD.EMAIL, AD.CITY, AD.STATE, U.MYREGIONS, U.SECURITY_QUESTION, U.ANSWER, U.BIO_DATA FROM USER_TABLE U, USER_ADDRESS AD WHERE U.ID =? AND USER_TYPE_ID = ? AND U.ID = AD.ID AND U.DELETE_FLAG = 'N' AND AD.DELETE_FLAG = 'N'
USER.CONTACTINFO.USER.UPDATE = UPDATE USER_TABLE SET MYREGIONS = ? WHERE ID = ? 
USER.CONTACTINFO.ADDRESS.UPDATE = UPDATE USER_ADDRESS SET ADDRESS1 =?, PHONE = ?, EMAIL =? WHERE ID = ?
USER.PERSONALINFO.USER.UPDATE = UPDATE USER_TABLE SET PREFIX = ?, FIRST_NAME = ?, MIDDLE_NAME = ?, LASTNAME = ?, SUFFIX = ?, BIRTH_DATE = ?, SECURITY_QUESTION = ?, ANSWER = ?, USER_NAME = ?, PASSWORD = ? WHERE ID = ?
USER.BIO.UPDATE=UPDATE USER_TABLE SET BIO_DATA = ? WHERE ID=?
USER.PHOTO.UPDATE=UPDATE USER_TABLE SET PHOTO = ? WHERE ID=?
USER.VIDEO.UPDATE=UPDATE USER_TABLE SET VIDEO = ? WHERE ID=?
USER.GET.PHOTO=SELECT PHOTO FROM USER_TABLE WHERE ID=?
USER.GET.VIDEO=SELECT VIDEO FROM USER_TABLE WHERE ID=?
USER.SECTION.GETMAN_FORUSERTYPE=SELECT USM.USER_SECTION_ID, USM.USER_TYPE_ID, UT.USER_TYPE_NAME, USM.USER_SECTION_NAME, USM.USER_SECTION_DESC, USM.MANDATORY_SECTION, USM.CREATE_TIME, USM.UPDATE_TIME FROM USER_SECTION_MASTER USM, USER_TYPE UT WHERE USM.USER_TYPE_ID = ? AND USM.DELETE_FLAG = 'N' AND USM.MANDATORY_SECTION='Y' AND USM.USER_TYPE_ID = UT.USER_TYPE_ID ORDER BY USM.USER_SECTION_ID, USM.USER_TYPE_ID
USER.SECTION.GETADDI_FORUSERTYPE=SELECT USM.USER_SECTION_ID, USM.USER_TYPE_ID, UT.USER_TYPE_NAME, USM.USER_SECTION_NAME, USM.USER_SECTION_DESC, USM.MANDATORY_SECTION, USM.CREATE_TIME, USM.UPDATE_TIME FROM USER_SECTION_MASTER USM, USER_TYPE UT  WHERE USM.USER_TYPE_ID = ? AND USM.DELETE_FLAG = 'N' AND USM.MANDATORY_SECTION='N' AND USM.USER_TYPE_ID = UT.USER_TYPE_ID ORDER BY USM.USER_SECTION_ID, USM.USER_TYPE_ID

GET.ALL.PROGRAMS.SELECT = SELECT DISTINCT E.EVENT_ID, E.EVENT_NAME, E.CREATOR_ID, E.HIERARCHY_ID, UE.ACCEPTED_INVITATION, E.STATUS_ID, ESM.EVENT_STATUS_NAME, ET.EVENT_TYPE_ID, ET.EVENT_TYPE_NAME, V.VENUE_NAME, EAT1.ATTRIBUTE_VALUE AS EVENT_DATE, EAT2.ATTRIBUTE_VALUE AS LECTURE_TOPIC FROM USER_ENGAGEMENT UE, EVENT E, EVENT_HIERARCHY EH, EVENT_TYPE ET, VENUE V, EVENT_ATTRIBUTE_TRANSACTION EAT1, EVENT_ATTRIBUTE_TRANSACTION EAT2, EVENT_STATUS_MASTER ESM WHERE UE.ID = ? AND UE.EVENT_ID = E.EVENT_ID AND E.STATUS_ID = ESM.STATUS_ID AND EH.HIERARCHY_ID = E.HIERARCHY_ID AND EH.EVENT_TYPE_ID = ET.EVENT_TYPE_ID AND V.VENUE_ID = E.VENUE_ID AND EAT1.EVENT_ID = E.EVENT_ID AND EAT1.EVENT_ATT_ID IN(9,39,65) AND EAT2.EVENT_ID = E.EVENT_ID AND EAT2.EVENT_ATT_ID IN(2,57,77)
GET.ALL.PROGRAMS.SELECT.EXPERT = SELECT DISTINCT E.EVENT_ID, E.EVENT_NAME, E.STATUS_ID, ESM.EVENT_STATUS_NAME, E.CREATOR_ID, E.HIERARCHY_ID, UE.ACCEPTED_INVITATION, ET.EVENT_TYPE_ID, ET.EVENT_TYPE_NAME, V.VENUE_NAME, EAT1.ATTRIBUTE_VALUE AS EVENT_DATE, EAT2.ATTRIBUTE_VALUE AS LECTURE_TOPIC FROM USER_ENGAGEMENT UE, EVENT E, EVENT_HIERARCHY EH, EVENT_TYPE ET, VENUE V, EVENT_ATTRIBUTE_TRANSACTION EAT1, EVENT_ATTRIBUTE_TRANSACTION EAT2, EVENT_STATUS_MASTER ESM WHERE UE.ID = ? AND UE.EVENT_ID = E.EVENT_ID AND E.STATUS_ID = ESM.STATUS_ID AND EH.HIERARCHY_ID = E.HIERARCHY_ID AND EH.EVENT_TYPE_ID = ET.EVENT_TYPE_ID AND V.VENUE_ID = E.VENUE_ID AND EAT1.EVENT_ID = E.EVENT_ID AND EAT1.EVENT_ATT_ID IN(9,39,65) AND EAT2.EVENT_ID = E.EVENT_ID AND EAT2.EVENT_ATT_ID IN(2,57,77) UNION SELECT DISTINCT E.EVENT_ID, E.EVENT_NAME, E.STATUS_ID, ESM.EVENT_STATUS_NAME, E.CREATOR_ID, E.HIERARCHY_ID, UE.ACCEPTED_INVITATION, ET.EVENT_TYPE_ID, ET.EVENT_TYPE_NAME, '', '', '' AS LECTURE_TOPIC FROM USER_ENGAGEMENT UE, EVENT E, EVENT_HIERARCHY EH, EVENT_TYPE ET, EVENT_STATUS_MASTER ESM WHERE UE.ID = ? AND UE.EVENT_ID = E.EVENT_ID AND E.STATUS_ID = ESM.STATUS_ID AND EH.HIERARCHY_ID = E.HIERARCHY_ID AND EH.EVENT_TYPE_ID=ET.EVENT_TYPE_ID AND EH.EVENT_TYPE_ID= 2 AND E.VENUE_ID IS NULL
GET.EVALUATE.PROGRAMS.SELECT = SELECT DISTINCT E.EVENT_ID, E.EVENT_NAME, E.CREATOR_ID, ET.EVENT_TYPE_ID, ET.EVENT_TYPE_NAME FROM USER_ENGAGEMENT UE, EVENT E, EVENT_HIERARCHY EH, EVENT_TYPE ET, QUESTIONNAIRE_ANSWER QA WHERE UE.EVENT_ID = E.EVENT_ID AND E.STATUS_ID = 9 AND EH.HIERARCHY_ID = E.HIERARCHY_ID AND EH.EVENT_TYPE_ID = ET.EVENT_TYPE_ID AND QA.ID = ? AND QA.EVENT_ID = UE.EVENT_ID 
PROGRAMS.INFO.UPDATE = UPDATE USER_ENGAGEMENT SET ACCEPTED_INVITATION = ? WHERE ID = ? AND EVENT_ID = ? 


###For Professional Distinctions
PREFERENCE.TYPE.GETATTRIBUTES = SELECT PTM.PREF_TYPE_ID, PTM.PREF_TYPE_NAME, PAM.PREF_ATT_ID, PAM.PREF_ATT_NAME, PAM.MANDATORY_FIELD, PAM.PREF_ATT_DATA_TYPE, PAM.PREF_ATT_SIZE, PAM.ATT_REQUIRED, PAM.ATTRIBUTE_TYPE, PAM.LABEL_NAME,PAM.OPTIONS FROM PREFERENCE_TYPE_MASTER PTM, PREFERENCE_ATT_MASTER PAM WHERE PTM.USER_SECTION_ID = ? AND PTM.PREF_TYPE_ID = PAM.PREF_TYPE_ID AND PAM.DELETE_FLAG = 'N' 
PREFERENCE.TYPE.GETATTRIBUTEVALUES = SELECT PAT.PREF_ATT_TRANS_ID, PAT.PREF_ATT_ID,  PTM.PREF_TYPE_ID, PTM.PREF_TYPE_NAME, PAT.ACCOUNT_ID, PAM.PREF_ATT_NAME, PAT.ATTRIBUTE_VALUE, PAM.MANDATORY_FIELD, PAM.PREF_ATT_DATA_TYPE, PAM.PREF_ATT_SIZE, PAM.ATT_REQUIRED, PAM.ATTRIBUTE_TYPE, PAM.LABEL_NAME,PAM.OPTIONS FROM  PREFERENCE_ATT_MASTER PAM,  PREFERENCE_ATT_TRANS PAT,  PREFERENCE_TYPE_MASTER PTM,  PREFERENCE_ACCOUNT PA WHERE PAM.PREF_ATT_ID = PAT.PREF_ATT_ID AND PA.ID = ? AND PA.ACCOUNT_ID = PAT.ACCOUNT_ID AND PTM.USER_SECTION_ID =? AND PTM.PREF_TYPE_ID = PAM.PREF_TYPE_ID GROUP BY PAT.ACCOUNT_ID, PAT.PREF_ATT_ID, PAT.PREF_ATT_TRANS_ID, PTM.PREF_TYPE_ID, PTM.PREF_TYPE_NAME, PAT.ATTRIBUTE_VALUE , PAM.PREF_ATT_NAME, PAM.MANDATORY_FIELD, PAM.PREF_ATT_DATA_TYPE, PAM.PREF_ATT_SIZE, PAM.ATT_REQUIRED, PAM.ATTRIBUTE_TYPE, PAM.LABEL_NAME,PAM.OPTIONS  
PREFERENCE.ACCOUNT.INSERT = INSERT INTO PREFERENCE_ACCOUNT (ACCOUNT_ID, ACCOUNT_NAME, ID, PREFERENCE_TYPE_ID) VALUES ((SELECT NVL(MAX(ACCOUNT_ID),0)+1 FROM PREFERENCE_ACCOUNT), ?, ?, ?) 
PREFERENCE.ATTRIBUTES.SELECT = SELECT PREF_ATT_ID, PREF_ATT_NAME FROM PREFERENCE_ATT_MASTER WHERE PREF_TYPE_ID = ? AND DELETE_FLAG = 'N' ORDER BY PREF_ATT_ID
PREFERENCE.ATT.VALUES.INSERT = INSERT INTO PREFERENCE_ATT_TRANS (PREF_ATT_TRANS_ID, PREF_ATT_ID, CREATE_TIME, ATTRIBUTE_VALUE, ACCOUNT_ID) VALUES ((SELECT NVL(MAX(PREF_ATT_TRANS_ID),0)+1 FROM PREFERENCE_ATT_TRANS), ?, SYSDATE, ?, (SELECT MAX(ACCOUNT_ID) FROM PREFERENCE_ACCOUNT))
PREFERENCE.ACCOUNT.DELETE = DELETE FROM PREFERENCE_ACCOUNT WHERE ACCOUNT_ID = ?
PREFERENCE.ATT.VALUES.DELETE = DELETE FROM PREFERENCE_ATT_TRANS WHERE ACCOUNT_ID = ?
PREFERENCE.ATT.VALUES.UPDATE = UPDATE PREFERENCE_ATT_TRANS SET ATTRIBUTE_VALUE =? WHERE ACCOUNT_ID =? AND PREF_ATT_ID = ?  
TRAVEL.PREFERENCE.ATT.VALUES.INSERT = INSERT INTO PREFERENCE_ATT_TRANS (PREF_ATT_TRANS_ID, PREF_ATT_ID, CREATE_TIME, ATTRIBUTE_VALUE, ACCOUNT_ID) VALUES ((SELECT NVL(MAX(PREF_ATT_TRANS_ID),0)+1 FROM PREFERENCE_ATT_TRANS), ?, SYSDATE, ?, ?)
GET.NEW.ACCOUNT.INFO = SELECT PAT.PREF_ATT_TRANS_ID, PTM.PREF_TYPE_ID, PTM.PREF_TYPE_NAME, PAT.ACCOUNT_ID, PAT.PREF_ATT_ID, PAM.PREF_ATT_NAME, PAT.ATTRIBUTE_VALUE, PAM.MANDATORY_FIELD, PAM.PREF_ATT_DATA_TYPE, PAM.PREF_ATT_SIZE, PAM.ATT_REQUIRED, PAM.ATTRIBUTE_TYPE, PAM.LABEL_NAME, PAM.OPTIONS  FROM PREFERENCE_ATT_TRANS PAT, PREFERENCE_ATT_MASTER PAM, PREFERENCE_TYPE_MASTER PTM WHERE PAT.ACCOUNT_ID = (SELECT MAX(ACCOUNT_ID) FROM PREFERENCE_ACCOUNT WHERE ID = ?) AND PTM.PREF_TYPE_ID = ? AND PAM.PREF_ATT_ID = PAT.PREF_ATT_ID GROUP BY PAT.ACCOUNT_ID, PAT.PREF_ATT_ID, PAT.PREF_ATT_TRANS_ID, PTM.PREF_TYPE_ID, PTM.PREF_TYPE_NAME, PAT.ATTRIBUTE_VALUE , PAM.PREF_ATT_NAME, PAM.MANDATORY_FIELD, PAM.PREF_ATT_DATA_TYPE, PAM.PREF_ATT_SIZE, PAM.ATT_REQUIRED, PAM.ATTRIBUTE_TYPE, PAM.LABEL_NAME,PAM.OPTIONS
PREFERENCE.TYPE.ONLYVALUES = SELECT PREF_ATT_TRANS_ID,ATTRIBUTE_VALUE,PREF_ATT_ID FROM PREFERENCE_ATT_TRANS WHERE ACCOUNT_ID IN (SELECT ACCOUNT_ID FROM  PREFERENCE_ACCOUNT WHERE ID=? AND PREFERENCE_TYPE_ID IN (SELECT PREF_TYPE_ID FROM PREFERENCE_TYPE_MASTER WHERE USER_SECTION_ID=?)) GROUP BY PREF_ATT_TRANS_ID,ATTRIBUTE_VALUE,PREF_ATT_ID
########## Queries for sales rep #################

PROGRAM.ATTRIBUTE.SELECT =SELECT A.EVENT_ATT_ID, A.EVENT_SECTION_ID,B.EVENT_SECTION_NAME,A.EVENT_ATT_NAME,A.LABEL_NAME,A.EVENT_ATT_SIZE,A.EVENT_ATT_DATA_TYPE, A.ATTRIBUTE_TYPE, OPTIONS, A.ATT_REQUIRED,A.MANDATORY_FIELD,B.MANDATORY_SECTION FROM EVENT_ATTRIBUTE_MASTER A,EVENT_SECTION_MASTER B WHERE A.EVENT_SECTION_ID =B.EVENT_SECTION_ID AND (A.HIERARCHY_ID =0 OR A.HIERARCHY_ID =?) AND A.DELETE_FLAG='N'  AND B.EVENT_TYPE_ID=? ORDER BY EVENT_SECTION_ID,EVENT_ATT_ID
PROGRAM.VENUE.ATTRIBUTE.SELECT =SELECT VENUE_ATT_ID, VEN_SECTION_ID ,VENUE_ATT_NAME, LABEL_NAME, VENUE_ATT_SIZE,VENUE_ATT_DATA_TYPE, ATTRIBUTE_TYPE, MANDATORY_FIELD FROM VENUE_ATTRIBUTE_MASTER WHERE  ATTRIBUTE_FOR_EVENT='Y' ORDER BY VENUE_ATT_ID
PROGRAM.HIERARCHY.ROOT.SELECT =SELECT DISTINCT A.HIERARCHY_ID,C.WORKFLOW_ID  FROM	EVENT_HIERARCHY A,EVENT_TYPE B,WORKFLOW_MASTER C,USER_GROUP_MAP D,WF_ACTION_GROUP_MAP E WHERE A.EVENT_TYPE_ID =B.EVENT_TYPE_ID AND A.HIERARCHY_ID = C.ROOT_HIERARCHY_ID AND C.WORKFLOW_ID =E.WORKFLOW_ID AND E.GROUP_ID = D.GROUP_ID AND E.SCREEN='REQUEST_PROGRAM' AND C.ACTIVE_STATUS='Y' AND D.ID=? AND A.DELETE_FLAG='N'
PROGRAM.HIERARCHY.CHILD.SELECT =SELECT A.HIERARCHY_ID,A.HIERARCHY_NAME,B.EVENT_TYPE_ID,B.EVENT_TYPE_NAME FROM EVENT_HIERARCHY A, EVENT_TYPE B WHERE HIERARCHY_ID IN(SELECT HIERARCHY_ID FROM EVENT_HIERARCHY START WITH HIERARCHY_ID=? CONNECT BY PRIOR HIERARCHY_ID=PARENT_ID)  AND A.EVENT_TYPE_ID =B.EVENT_TYPE_ID
PROGRAM.VENUE.DETAILS =SELECT A.VENUE_ATT_NAME,A.LABEL_NAME, B.ATTRIBUTE_VALUE FROM VENUE_ATTRIBUTE_MASTER A , VENUE_ATTRIBUTE_TRANSACTION B,VENUE_SECTION_MASTER C WHERE B.VENUE_ID=? AND A.VENUE_ATT_ID= B.VENUE_ATT_ID  AND A.VEN_SECTION_ID = C.VEN_SECTION_ID AND C.DELETE_FLAG='N' ORDER BY B.VENUE_ATT_ID
PROGRAM.NEW.MASTER.INSERT =INSERT INTO EVENT (EVENT_ID, HIERARCHY_ID, WORKFLOW_ID,VENUE_ID,ZONE_ID, CREATOR_ID, STATUS_ID, EVENT_NAME, CURRENT_WF_STEP,DELETE_FLAG,UPDATE_TIME,CREATE_TIME) VALUES((SELECT NVL(MAX(EVENT_ID),0)+1 FROM EVENT),?,?,?,?,?,?,?,?,'N',SYSDATE,SYSDATE)
PROGRAM.NEW.EVENTID.SELECT = SELECT EVENT_ID FROM EVENT WHERE EVENT_NAME=?
PROGRAM.NEW.TRANSACTION.INSERT =INSERT INTO EVENT_ATTRIBUTE_TRANSACTION (EVENT_ID,EVENT_ATT_ID, ATTRIBUTE_VALUE,DELETE_FLAG,CREATE_TIME,UPDATE_TIME) VALUES(?,?,?,'N',SYSDATE,SYSDATE)

PROGRAM.EXPERT.INSERT=INSERT INTO USER_ENGAGEMENT (ID,EVENT_ID,ACCEPTED_INVITATION,CREATE_TIME,UPDATE_TIME)VALUES (?,?,'C',SYSDATE,SYSDATE)
PROGRAM.EXPERT.DELETE =DELETE FROM USER_ENGAGEMENT WHERE EVENT_ID=?
PROGRAM.EXPERT.SELECT =SELECT A.ID,B.PREFIX,B.FIRST_NAME,B.LASTNAME, A.ACCEPTED_INVITATION FROM USER_ENGAGEMENT A,USER_TABLE B WHERE A.EVENT_ID=? AND A.ID=B.ID AND B.USER_TYPE_ID=3
PROGRAM.ATTENDEE.SELECT =SELECT A.ID,B.PREFIX,B.FIRST_NAME,B.LASTNAME, A.ACCEPTED_INVITATION FROM USER_ENGAGEMENT A,USER_TABLE B WHERE A.EVENT_ID=? AND A.ID=B.ID AND B.USER_TYPE_ID=4

PROGRAM.EVENT.UPDATE = UPDATE EVENT SET EVENT_NAME=?, ZONE_ID=?, VENUE_ID=?  WHERE EVENT_ID=? 
PROGRAM.EVENT.ATTRIBUTE.UPDATE = UPDATE EVENT_ATTRIBUTE_TRANSACTION SET ATTRIBUTE_VALUE=?,UPDATE_TIME=SYSDATE WHERE EVENT_ATT_ID=? AND EVENT_ID=?

PROGRAM.EVENT.FIELDS.UPDATE = UPDATE EVENT SET EVENT_NAME=?, STATUS_ID=2, ZONE_ID=?, VENUE_ID=?, UPDATE_TIME=SYSDATE WHERE EVENT_ID=?
PROGRAM.EVENT.APPROVER.FIND = SELECT T.ID FROM TEAM_STRUCTURE T WHERE T.ROLE_ID=4 AND T.HIERARCHY_ID IN (SELECT A.HIERARCHY_ID FROM EVENT_HIERARCHY A, EVENT B WHERE B.HIERARCHY_ID IN (SELECT HIERARCHY_ID FROM EVENT_HIERARCHY START WITH HIERARCHY_ID=? CONNECT BY PRIOR HIERARCHY_ID=PARENT_ID) AND A.HIERARCHY_ID = B.HIERARCHY_ID AND B.EVENT_ID=?)

PROGRAM.FIELDS.UPDATE = UPDATE EVENT SET EVENT_NAME=?, STATUS_ID=?, ZONE_ID=?, VENUE_ID=?, UPDATE_TIME=SYSDATE WHERE EVENT_ID=?

ACTION.DETAIL.INSERT = INSERT INTO ACTION_DETAIL(ACTION_DETAIL_ID,EVENT_ID,APPROVER_ID,ACTION_STATUS,CREATE_TIME,UPDATE_TIME,ACTION) VALUES ((SELECT NVL(MAX(ACTION_DETAIL_ID),0)+1 FROM ACTION_DETAIL), ?, ?, ?, SYSDATE, SYSDATE, ?)
ACTION.DETAIL.UPDATE = UPDATE ACTION_DETAIL SET ACTION_STATUS=?, UPDATE_TIME=SYSDATE WHERE EVENT_ID=? AND ACTION='SCREEN'
ACTION.DETAIL.SELECT = SELECT ACTION_STATUS FROM ACTION_DETAIL WHERE ACTION_DETAIL_ID=?
PROGRAM.EVENT.STATUS.UPDATE = UPDATE EVENT SET STATUS_ID=?, UPDATE_TIME=SYSDATE WHERE EVENT_ID=?

PROGRAM.ATTRIBUTE.VALUE.SELECT =SELECT B.VENUE_ID, A.EVENT_ATT_ID,A.ATTRIBUTE_VALUE FROM EVENT_ATTRIBUTE_TRANSACTION A,EVENT B WHERE A.EVENT_ID=? AND A.EVENT_ID=B.EVENT_ID
PROGRAM.CALENDAR.SELECT =SELECT   B.HIERARCHY_ID,  E.EVENT_TYPE_ID,  A.EVENT_ID,  B.EVENT_NAME,  A.ATTRIBUTE_VALUE AS EVENT_DATE,  C.TOOL_TIP,  C.ACTION,  C.BACKGROUND_COLOR,  C.FONT_COLOR,  C.BACKGROUND_IMAGE,  C.DISPLAY_MESSAGE FROM   EVENT_ATTRIBUTE_TRANSACTION A,  EVENT B,  CALENDAR_AGENDA C,  EVENT_STATUS_MASTER D,  EVENT_HIERARCHY E WHERE   EVENT_ATT_ID IN(9,39,65) AND  A.EVENT_ID=B.EVENT_ID   AND  D.STATUS_ID =B.STATUS_ID AND  D.AGENDA_ID=C.AGENDA_ID AND  E.HIERARCHY_ID=B.HIERARCHY_ID
PROGRAM.HOLIDAY.SELECT =SELECT AGENDA_NAME , AGENDA_DATE ,TOOL_TIP,ACTION,BACKGROUND_COLOR,FONT_COLOR,BACKGROUND_IMAGE,DISPLAY_MESSAGE FROM CALENDAR_AGENDA WHERE AGENDA_TYPE_ID=1 and ID=0
PROGRAM.CALENDAR.LEGEND.SELECT=SELECT AGENDA_ID ,BACKGROUND_COLOR FROM CALENDAR_AGENDA WHERE ID=0 AND AGENDA_ID IN(1,2,3,4,5)
PROGRAM.CREATOR.SELECT =SELECT U.FIRST_NAME, U.MIDDLE_NAME,U.LASTNAME, U.PREFIX, U.SUFFIX,U.MYREGIONS, AD.ADDRESS1, AD.ADDRESS2, AD.CITY, AD.STATE, AD.COUNTRY, AD.ZIP, AD.PHONE, AD.EMAIL,  AD.SUITE_ROOM FROM USER_TABLE U, USER_ADDRESS AD,EVENT C  WHERE U.ID = C.CREATOR_ID  AND U.ID = AD.ID AND C.EVENT_ID=?

PROGRAM.SEARCH.BASIC = SELECT E.EVENT_ID EVENT_ID,E.EVENT_NAME EVENT_NAME, T.EVENT_TYPE_ID, H.HIERARCHY_ID, A.EVENT_DATE CDATE, V.VENUE_NAME VENUE_NAME,U.USER_NAME USER_NAME,S.EVENT_STATUS_NAME STATUS, T.EVENT_TYPE_NAME EVENT_TYPE FROM EVENT E,VENUE V, USER_TABLE U, EVENT_STATUS_MASTER S, EVENT_TYPE T, EVENT_HIERARCHY H, EVENT_ATTRIBUTE_VIEW_DATE A WHERE E.DELETE_FLAG='N'AND E.VENUE_ID=V.VENUE_ID AND E.CREATOR_ID=U.ID AND E.STATUS_ID=S.STATUS_ID AND (T.EVENT_TYPE_ID=H.EVENT_TYPE_ID AND H.HIERARCHY_ID=E.HIERARCHY_ID) AND ((UPPER(E.EVENT_NAME) LIKE ?) OR (UPPER(V.VENUE_NAME) LIKE ?) OR (UPPER(U.USER_NAME) LIKE ?) OR (UPPER(S.EVENT_STATUS_NAME) LIKE ?) OR (UPPER(T.EVENT_TYPE_NAME) LIKE ?)) AND E.EVENT_ID = A.EVENT_ID
PROGRAM.SEARCH.BASIC.CHECK = SELECT E.EVENT_ID EVENT_ID,E.EVENT_NAME EVENT_NAME, T.EVENT_TYPE_ID, H.HIERARCHY_ID, A.EVENT_DATE CDATE, V.VENUE_NAME VENUE_NAME, U.USER_NAME USER_NAME,S.EVENT_STATUS_NAME STATUS, T.EVENT_TYPE_NAME EVENT_TYPE FROM EVENT E,VENUE V, USER_TABLE U, EVENT_STATUS_MASTER S, EVENT_TYPE T, EVENT_HIERARCHY H, EVENT_ATTRIBUTE_VIEW_DATE A WHERE E.DELETE_FLAG='N'AND E.VENUE_ID=V.VENUE_ID AND E.CREATOR_ID=U.ID AND E.STATUS_ID=S.STATUS_ID AND (T.EVENT_TYPE_ID=H.EVENT_TYPE_ID AND H.HIERARCHY_ID=E.HIERARCHY_ID) AND ((UPPER(E.EVENT_NAME) LIKE ?) OR (UPPER(V.VENUE_NAME) LIKE ?) OR (UPPER(U.USER_NAME) LIKE ?) OR (UPPER(S.EVENT_STATUS_NAME) LIKE ?) OR (UPPER(T.EVENT_TYPE_NAME) LIKE ?)) AND ((UPPER(E.EVENT_NAME) LIKE ?) OR (UPPER(V.VENUE_NAME) LIKE ?) OR (UPPER(U.USER_NAME) LIKE ?) OR (UPPER(S.EVENT_STATUS_NAME) LIKE ?) OR (UPPER(T.EVENT_TYPE_NAME) LIKE ?)) AND E.EVENT_ID = A.EVENT_ID
PROGRAM.TYPES.SELECT = SELECT EVENT_TYPE_ID,EVENT_TYPE_NAME FROM EVENT_TYPE WHERE EVENT_TYPE_ID!=0
PROGRAM.STATUS.SELECT = SELECT STATUS_ID,EVENT_STATUS_NAME FROM EVENT_STATUS_MASTER
PROGRAM.SEARCH.ADV = SELECT E.EVENT_ID EVENT_ID,E.EVENT_NAME EVENT_NAME, H.EVENT_TYPE_ID, H.HIERARCHY_ID,A.EVENT_DATE CDATE, V.VENUE_NAME VENUE_NAME,U.USER_NAME USER_NAME,S.EVENT_STATUS_NAME STATUS, T.EVENT_TYPE_NAME EVENT_TYPE FROM EVENT E,VENUE V, USER_TABLE U, EVENT_STATUS_MASTER S, EVENT_TYPE T, EVENT_HIERARCHY H, EVENT_ATTRIBUTE_VIEW_DATE A WHERE E.DELETE_FLAG='N'AND E.VENUE_ID=V.VENUE_ID AND E.CREATOR_ID=U.ID AND E.STATUS_ID=S.STATUS_ID AND (T.EVENT_TYPE_ID=H.EVENT_TYPE_ID AND H.HIERARCHY_ID=E.HIERARCHY_ID) AND E.EVENT_ID = A.EVENT_ID AND T.EVENT_TYPE_ID = ? AND S.STATUS_ID = ? AND E.EVENT_ID IN (SELECT EVENT_ID FROM EVENT_ATTRIBUTE_VIEW_DATE V WHERE EVENT_DATE BETWEEN ? AND ?)
PROGRAM.SEARCH.ADV.JOIN1 = AND E.EVENT_ID IN (SELECT EVENT_ID FROM EVENT_ATTRIBUTE_VIEW_DATE WHERE EVENT_DATE = ? AND EVENT_ATT_ID = ?)
PROGRAM.SEARCH.ADV.JOIN2 = AND E.EVENT_ID IN (SELECT EVENT_ID FROM EVENT_ATTRIBUTE_TRANSACTION WHERE ATTRIBUTE_VALUE LIKE ? AND EVENT_ATT_ID = ?)
PROGRAM.CUST.ATT.FIND = SELECT EVENT_ATT_ID, EVENT_ATT_NAME, LABEL_NAME, EVENT_ATT_DATA_TYPE, EVENT_ATT_SIZE, ATTRIBUTE_TYPE, OPTIONS FROM EVENT_ATTRIBUTE_MASTER WHERE SEARCH_FIELD = 'Y' AND DELETE_FLAG='N' ORDER BY LABEL_NAME

PROGRAM.MASTER.DELETE = UPDATE EVENT SET DELETE_FLAG='Y', STATUS_Id=11 WHERE EVENT_ID=?
PROGRAM.TRANSACTION.DELETE =UPDATE EVENT_ATTRIBUTE_TRANSACTION SET DELETE_FLAG='Y' WHERE EVENT_ID=?

PROGRAM.PAYMENT.STATUS.SELECT = SELECT APPROVAL_STATUS,EXPERT_ID,OVERRIDE_AMOUNT FROM VAR_PAYMENT_PROCESS_TRANS WHERE EVENT_ID=? GROUP BY APPROVAL_STATUS,EXPERT_ID,OVERRIDE_AMOUNT ORDER BY APPROVAL_STATUS DESC

PROGRAM.TASKS.SELECT = SELECT WF_STEP_ID FROM WORKFLOW_STEP_MASTER WHERE WORKFLOW_ID = (SELECT WORKFLOW_ID FROM EVENT WHERE EVENT_ID=?) AND STEP_TYPE='TASK'
PROGRAM.TASKS.INSERT = INSERT INTO WORKFLOW_TASK_DETAIL(WF_TASK_ID,EVENT_ID,WF_STEP_ID,TEAM_MEMBER_ID,MANAGER,TASK_STATUS,APPROVAL_STATUS,ASSIGNED_DATE,DUE_DATE) VALUES((SELECT NVL(MAX(WF_TASK_ID),0)+1 FROM WORKFLOW_TASK_DETAIL),?,?,0,(SELECT A.LASTNAME || ',' || A.FIRST_NAME FROM USER_TABLE A, TEAM_STRUCTURE B, EVENT C WHERE C.HIERARCHY_ID=B.HIERARCHY_ID AND EVENT_ID=? AND B.ROLE_ID=1 AND B.ID=A.ID) ,'TO_BE_STARTED','C',SYSDATE,SYSDATE)

PROGRAM.EXPERTS.SELECT = SELECT U.ID,USER_NAME,FIRST_NAME,LASTNAME,EMAIL FROM USER_TABLE U, USER_ADDRESS A WHERE U.ID=A.ID AND U.ID IN (SELECT ID FROM USER_ENGAGEMENT WHERE EVENT_ID=?)

SRPROFILE.VIEW =  SELECT U.USER_TYPE_ID, U.USER_NAME, U.PASSWORD, U.FIRST_NAME, U.MIDDLE_NAME, U.LASTNAME, U.PREFIX, U.SUFFIX, U.BIRTH_DATE, U.SECURITY_QUESTION, U.answer,U.myregions,U.BIO_DATA, AD.ADDRESS1, AD.ADDRESS2, AD.CITY, AD.STATE, AD.COUNTRY, AD.ZIP, AD.PHONE, AD.EMAIL,AD.SUITE_ROOM FROM USER_TABLE U, USER_ADDRESS AD WHERE U.ID = ? AND U.ID = AD.ID  
SRPROFILE.USER_UPDATE = update user_table set first_name=?, middle_name=?,LASTNAME=?,prefix=?, suffix=?, BIRTH_DATE=?,BIO_DATA=?,ANSWER=?, SECURITY_QUESTION =?, MYREGIONS=? where ID=?
SRPROFILE.USER_ADDRESS_UPDATE = update user_address set ADDRESS1=?, ADDRESS2=?, SUITE_ROOM=?, CITY=?, STATE=?, country=?, ZIP=?, phone=? where  ID=?
SRPROFILE.USER_ACCOUNT_UPDATE = update user_table set USER_NAME=?, PASSWORD=? where ID=?
SRPROFILE.USER_ADDRESS_EMAIL_UPDATE = update user_address set EMAIL = ? where ID=?
SR_EVENTDETAILS = select * from event where creator_id = ? and delete_flag='N' and status_id in (7,8)
SR_EVENT_ATTENDEES = select UE.ACCEPTED_INVITATION, UT.ID, UT.FIRST_NAME, UT.MIDDLE_NAME, UT.LASTNAME, UT.PREFIX,  ua.ADDRESS1, ua.ADDRESS2, ua.CITY, ua.STATE, ua.COUNTRY, ua.ZIP, ua.PHONE, ua.EMAIL,ua.SUITE_ROOM from user_engagement ue, user_table ut, user_address ua where ue.event_id= ? and ue.ID = ut.ID and ue.ID=ua.ID
SR_EVENT_ATTENDEE_ADD = insert into user_engagement(ID,event_id, ACCEPTED_INVITATION, create_time, update_time) values(?,?,'C',sysdate,sysdate) 


ATTENDEE.EMAIL.DATA = SELECT    U.ID,   U.USER_NAME,   U.FIRST_NAME,   U.LASTNAME,   U.USER_TYPE_ID,   EMAIL,   EVENT_NAME,   VENUE_NAME,   ATTRIBUTE_VALUE,   TYPE.EVENT_TYPE_ID FROM  USER_TABLE U,   USER_ADDRESS A,   EVENT E,   VENUE V,   EVENT_ATTRIBUTE_TRANSACTION F,   EVENT_TYPE TYPE,   EVENT_HIERARCHY H WHERE    A.ID = U.ID AND  E.EVENT_ID=F.EVENT_ID AND   E.HIERARCHY_ID=H.HIERARCHY_ID AND   E.VENUE_ID=V.VENUE_ID AND   TYPE.EVENT_TYPE_ID = H.EVENT_TYPE_ID AND  E.EVENT_ID = ? AND   U.ID IN (?) AND   F.EVENT_ATT_ID IN (2,57,77)  UNION  SELECT  U.ID,  NULL,   U.FIRST_NAME,   U.LASTNAME,   U.USER_TYPE_ID,   NULL,   NULL,   NULL,   NULL,   NULL  FROM   USER_TABLE U,   USER_ENGAGEMENT UE,  USER_ADDRESS A,   EVENT E,   VENUE V WHERE   U.ID = UE.ID  AND   UE.EVENT_ID = ? AND   U.USER_TYPE_ID=3 order by user_type_id
EXPERT.EMAIL.DATA = SELECT    U.ID,   U.USER_NAME,   U.FIRST_NAME,   U.LASTNAME,   U.USER_TYPE_ID,   EMAIL,   EVENT_NAME,    VENUE_NAME,   ATTRIBUTE_VALUE,    TYPE.EVENT_TYPE_ID FROM  USER_TABLE U,   USER_ADDRESS A,   EVENT E,   VENUE V,    EVENT_ATTRIBUTE_TRANSACTION F,   EVENT_TYPE TYPE,  EVENT_HIERARCHY H WHERE  A.ID = U.ID AND  E.EVENT_ID=F.EVENT_ID AND   E.HIERARCHY_ID=H.HIERARCHY_ID AND   E.VENUE_ID=V.VENUE_ID AND   TYPE.EVENT_TYPE_ID = H.EVENT_TYPE_ID AND   E.EVENT_ID = ? AND   U.ID IN (?) AND   F.EVENT_ATT_ID IN (2,57,77)  AND   U.USER_TYPE_ID=3

SR_MY_PROGRAM_SELECT = SELECT   G.FIRST_NAME,  G.LASTNAME,  A.EVENT_ID,  A.EVENT_NAME,  A.CURRENT_WF_STEP, B.VENUE_NAME,  E.STATUS_ID,  E.EVENT_STATUS_NAME,  D.EVENT_TYPE_ID,  D.EVENT_TYPE_NAME,  F.ATTRIBUTE_VALUE,  'YES' AS EDITABLE ,  C.HIERARCHY_ID FROM   EVENT A,  VENUE B ,  EVENT_HIERARCHY C ,  EVENT_TYPE D,  EVENT_STATUS_MASTER E,  EVENT_ATTRIBUTE_TRANSACTION F,  USER_TABLE G WHERE   A.DELETE_FLAG='N' AND  A.VENUE_ID=B.VENUE_ID AND  A.HIERARCHY_ID=C.HIERARCHY_ID AND  C.EVENT_TYPE_ID=D.EVENT_TYPE_ID    AND  E.STATUS_ID=A.STATUS_ID AND  F.EVENT_ID=A.EVENT_ID AND  EVENT_ATT_ID IN(9,39,65) AND  G.ID =A.CREATOR_ID AND  A.CREATOR_ID =?           UNION SELECT   G.FIRST_NAME,  G.LASTNAME,  A.EVENT_ID,  A.EVENT_NAME,  A.CURRENT_WF_STEP, B.VENUE_NAME,  E.STATUS_ID,  E.EVENT_STATUS_NAME,  D.EVENT_TYPE_ID,  D.EVENT_TYPE_NAME,  F.ATTRIBUTE_VALUE,  'NO' AS     EDITABLE ,  C.HIERARCHY_ID FROM   EVENT A,  VENUE B ,  EVENT_HIERARCHY C ,  EVENT_TYPE D,  EVENT_STATUS_MASTER E,     EVENT_ATTRIBUTE_TRANSACTION F,  USER_TABLE G,  WORKFLOW_ACTION_MASTER H WHERE   A.DELETE_FLAG='N' AND	   A.VENUE_ID=B.VENUE_ID AND  A.HIERARCHY_ID=C.HIERARCHY_ID AND  C.EVENT_TYPE_ID =D.EVENT_TYPE_ID AND  E.STATUS_ID=A.STATUS_ID AND  F.EVENT_ID=A.EVENT_ID AND  EVENT_ATT_ID IN(9,39,65) AND  G.ID=A.CREATOR_ID AND H.APPROVER_ID=? AND A.EVENT_ID NOT IN(SELECT EVENT_ID FROM   EVENT WHERE CREATOR_ID=?)                UNION  SELECT  DISTINCT G.FIRST_NAME,  G.LASTNAME,  A.EVENT_ID,  A.EVENT_NAME,     A.CURRENT_WF_STEP, B.VENUE_NAME,  E.STATUS_ID,  E.EVENT_STATUS_NAME,  D.EVENT_TYPE_ID,  D.EVENT_TYPE_NAME,  F.ATTRIBUTE_VALUE,  'NO' AS EDITABLE ,  C.HIERARCHY_ID FROM   EVENT A,  VENUE B ,  EVENT_HIERARCHY C ,  EVENT_TYPE D,  EVENT_STATUS_MASTER E,  EVENT_ATTRIBUTE_TRANSACTION F,  USER_TABLE G,  WORKFLOW_TASK_DETAIL H WHERE   A.DELETE_FLAG='N' AND    A.VENUE_ID=B.VENUE_ID AND  A.HIERARCHY_ID=C.HIERARCHY_ID AND  C.EVENT_TYPE_ID =D.EVENT_TYPE_ID AND	  E.STATUS_ID=A.STATUS_ID AND  F.EVENT_ID=A.EVENT_ID AND  EVENT_ATT_ID IN(9,39,65) AND  G.ID =A.CREATOR_ID AND	H.TEAM_MEMBER_ID=? AND  A.EVENT_ID NOT IN(SELECT EVENT_ID FROM EVENT WHERE		CREATOR_ID=?)       UNION  SELECT  G.FIRST_NAME,  G.LASTNAME,  A.EVENT_ID,  A.EVENT_NAME,  A.CURRENT_WF_STEP, ' ' AS		 VENUE_NAME, E.STATUS_ID,  E.EVENT_STATUS_NAME, D.EVENT_TYPE_ID,  D.EVENT_TYPE_NAME, F.ATTRIBUTE_VALUE,  'YES' ASEDITABLE , C.HIERARCHY_ID FROM   EVENT A, EVENT_HIERARCHY C ,  EVENT_TYPE D,  EVENT_STATUS_MASTER E, EVENT_ATTRIBUTE_TRANSACTION F,  USER_TABLE G WHERE  A.DELETE_FLAG='N' AND  A.HIERARCHY_ID=C.HIERARCHY_ID AND  C.EVENT_TYPE_ID =D.EVENT_TYPE_ID AND  D.EVENT_TYPE_ID=2 AND E.STATUS_ID=A.STATUS_ID AND  F.EVENT_ID=A.EVENT_ID AND  EVENT_ATT_ID IN(1,20,51,76) AND  G.ID =A.CREATOR_ID  AND A.CREATOR_ID =?         UNION  SELECT  DISTINCT G.FIRST_NAME,G.LASTNAME,  A.EVENT_ID, A.EVENT_NAME, A.CURRENT_WF_STEP, ' ' AS VENUE_NAME, E.STATUS_ID,  E.EVENT_STATUS_NAME, D.EVENT_TYPE_ID,  D.EVENT_TYPE_NAME, F.ATTRIBUTE_VALUE,  'NO' ASEDITABLE , C.HIERARCHY_ID FROM   EVENT A, EVENT_HIERARCHY C ,  EVENT_TYPE D, EVENT_STATUS_MASTER E, EVENT_ATTRIBUTE_TRANSACTION F, USER_TABLE G, WORKFLOW_TASK_DETAIL H WHERE   A.DELETE_FLAG='N' AND  A.HIERARCHY_ID=C.HIERARCHY_ID AND C.EVENT_TYPE_ID=D.EVENT_TYPE_ID AND  D.EVENT_TYPE_ID=2 AND  E.STATUS_ID=A.STATUS_ID AND  F.EVENT_ID=A.EVENT_ID AND EVENT_ATT_ID IN(1,20,51,76) AND  G.ID =A.CREATOR_ID AND  H.TEAM_MEMBER_ID=? AND  A.EVENT_ID NOT  IN (SELECT EVENT_ID FROM EVENT WHERE CREATOR_ID=?)         UNION     SELECT  G.FIRST_NAME,  G.LASTNAME,  A.EVENT_ID, A.EVENT_NAME, A.CURRENT_WF_STEP,  ' ' AS VENUE_NAME,  E.STATUS_ID,  E.EVENT_STATUS_NAME, D.EVENT_TYPE_ID,  D.EVENT_TYPE_NAME,F.ATTRIBUTE_VALUE,  'NO' AS EDITABLE ,  C.HIERARCHY_ID FROM   EVENT A, EVENT_HIERARCHY C , EVENT_TYPE D, EVENT_STATUS_MASTER E,  EVENT_ATTRIBUTE_TRANSACTION F,  USER_TABLE G, TEAM_STRUCTURE H WHERE  A.DELETE_FLAG='N' AND  A.HIERARCHY_ID=C.HIERARCHY_ID AND  C.EVENT_TYPE_ID =D.EVENT_TYPE_ID AND  C.EVENT_TYPE_ID =2 AND E.STATUS_ID=A.STATUS_ID AND  F.EVENT_ID=A.EVENT_ID AND  H.HIERARCHY_ID=A.HIERARCHY_ID AND  H.ROLE_ID=4 AND EVENT_ATT_ID IN(1,20,51,76) AND  G.ID=A.CREATOR_ID AND  H.ID=? AND  A.EVENT_ID NOT IN(SELECT EVENT_ID FROM EVENT WHERE CREATOR_ID=?) ORDER BY EVENT_ID DESC

SM_EVENT_APPROVAL_SELECT =SELECT EVENT_ID,ACTION_STATUS FROM ACTION_DETAIL WHERE APPROVER_ID=? AND ACTION='SCREEN'
USER_EVALUATED_EVENT_SELECT =SELECT DISTINCT B.EVENT_ID, 'YES' AS EVALUATED FROM QUESTIONNAIRE_ANSWER A, EVENT B WHERE ID=? AND A.EVENT_ID=B.EVENT_ID AND B.STATUS_ID=9 
SR_MYEXPERT_SELECT = SELECT A.ID,A.FIRST_NAME,A.LONGITUDE,A.LATITUDE,A.INFLUENCE_LEVEL,A.LASTNAME,C.ATTRIBUTE_VALUE AS SPECIALITY,D.PHONE,D.CITY,D.STATE,D.COUNTRY FROM USER_TABLE A,MY_EXPERT_LIST B,USER_ATTRIBUTE_TRANSACTION C,USER_ADDRESS D WHERE  A.ID=B.EXPERT_ID AND  A.ID=C.ID AND C.USER_ATT_ID=1 AND B.SALESREP_ID =? AND D.ID=A.ID UNION SELECT A.ID,A.FIRST_NAME,A.LONGITUDE,A.LATITUDE,A.INFLUENCE_LEVEL,A.LASTNAME,'' AS SPECIALITY,D.PHONE,D.CITY,D.STATE, D.COUNTRY FROM USER_TABLE A,MY_EXPERT_LIST B,USER_ADDRESS D WHERE  A.ID=B.EXPERT_ID AND B.SALESREP_ID =? AND D.ID=A.ID AND A.ID NOT IN(SELECT ID FROM USER_ATTRIBUTE_TRANSACTION WHERE USER_ATT_ID=1)
SR_MYEXPERT_NON_DELETABLE =SELECT A.ID FROM USER_ENGAGEMENT A,USER_TABLE B, EVENT C WHERE A.ID=B.ID AND B.USER_TYPE_ID=3 AND A.EVENT_ID=C.EVENT_ID AND C.STATUS_ID>=9 AND C.CREATOR_ID=? 

PROGRAM.INFO.SELECT =SELECT A.EVENT_NAME, B.VENUE_NAME,C.ATTRIBUTE_VALUE AS MEETINGDATE FROM EVENT A,VENUE B,EVENT_ATTRIBUTE_TRANSACTION C WHERE A.VENUE_ID=B.VENUE_ID AND A.EVENT_ID=C.EVENT_ID AND C.EVENT_ATT_ID IN(9,39,65) AND A.EVENT_ID=?
PROGRAM.EXPERT.EVAL.SELECT =SELECT A.PREFIX,A.FIRST_NAME,A.LASTNAME ,B.ATTRIBUTE_VALUE AS SPECIALITY FROM USER_TABLE A,USER_ATTRIBUTE_TRANSACTION B,USER_ENGAGEMENT C,EVENT D WHERE A.ID=B.ID AND A.ID=C.ID AND D.EVENT_ID= C.EVENT_ID AND A.USER_TYPE_ID=3 AND D.EVENT_ID=? AND B.USER_ATT_ID =1

TASK.COMPLETION.APPROVER_ID.SELECT = SELECT ID FROM USER_ADDRESS WHERE UPPER(EMAIL) LIKE UPPER('"+taskDTO.getApproverEmailId()+"')
TASK.COMPLETION.APPROVE = UPDATE WORKFLOW_TASK_DETAIL EVENT SET APPROVAL_STATUS = ?, TASK_STATUS = ? WHERE WF_TASK_ID = ?
EVENT.PROGRESS.PROGRAMS.MANAGER.SELECT = SELECT DISTINCT U.FIRST_NAME, U.LASTNAME, E.EVENT_ID, E.EVENT_NAME, V.VENUE_NAME, STS.EVENT_STATUS_NAME, F.ATTRIBUTE_VALUE, TYPE.EVENT_TYPE_ID, E.HIERARCHY_ID FROM EVENT E, VENUE V, EVENT_HIERARCHY H, EVENT_TYPE TYPE, EVENT_STATUS_MASTER STS, EVENT_ATTRIBUTE_TRANSACTION F, USER_TABLE U, TEAM_STRUCTURE TEAM WHERE E.HIERARCHY_ID IN (SELECT HIERARCHY_ID FROM TEAM_STRUCTURE WHERE ID=? AND  ROLE_ID=1) AND  E.STATUS_ID=STS.STATUS_ID AND E.DELETE_FLAG='N' AND E.VENUE_ID=V.VENUE_ID AND F.EVENT_ID=E.EVENT_ID AND EVENT_ATT_ID IN(9,39,65) AND U.ID=E.CREATOR_ID AND TYPE.EVENT_TYPE_ID=H.EVENT_TYPE_ID AND E.HIERARCHY_ID=H.HIERARCHY_ID UNION SELECT DISTINCT U.FIRST_NAME, U.LASTNAME, E.EVENT_ID, E.EVENT_NAME, NULL, STS.EVENT_STATUS_NAME, F.ATTRIBUTE_VALUE, TYPE.EVENT_TYPE_ID, E.HIERARCHY_ID FROM EVENT E, EVENT_HIERARCHY H, EVENT_TYPE TYPE, EVENT_STATUS_MASTER STS, EVENT_ATTRIBUTE_TRANSACTION F, USER_TABLE U, TEAM_STRUCTURE TEAM WHERE E.HIERARCHY_ID IN (SELECT HIERARCHY_ID FROM TEAM_STRUCTURE WHERE ID=? AND ROLE_ID=1) AND E.STATUS_ID=STS.STATUS_ID AND E.DELETE_FLAG='N' AND F.EVENT_ID=E.EVENT_ID AND TYPE.EVENT_TYPE_ID=2 AND TYPE.EVENT_TYPE_ID=H.EVENT_TYPE_ID AND EVENT_ATT_ID IN(20) AND U.ID =E.CREATOR_ID AND TYPE.EVENT_TYPE_ID = H.EVENT_TYPE_ID AND E.HIERARCHY_ID=H.HIERARCHY_ID
EVENT.PROGRESS.TASKS.SELECT = SELECT DISTINCT T.WF_TASK_ID, ROLE_ID, S.WF_STEP_ID, S.WF_STEP_NAME, S.STEP_SEQUENCE, E.EVENT_ID, E.EVENT_NAME FROM WORKFLOW_TASK_DETAIL T, WORKFLOW_STEP_MASTER S, EVENT E, TEAM_STRUCTURE TEAM, EVENT_HIERARCHY H, EVENT_TYPE TYPE WHERE H.EVENT_TYPE_ID=TYPE.EVENT_TYPE_ID AND T.WF_STEP_ID = S.WF_STEP_ID AND T.EVENT_ID = E.EVENT_ID AND E.HIERARCHY_ID = H.HIERARCHY_ID AND TEAM.HIERARCHY_ID = E.HIERARCHY_ID AND TEAM.ID=? AND ROLE_ID IN (1,2) ORDER BY EVENT_NAME, STEP_SEQUENCE
EVENT.PROGRESS.LATEST.TASK.SELECT = SELECT   A.WF_TASK_ID,   B.ROLE_ID ,   C.WF_STEP_ID,   D.CURRENT_WF_STEP,C.WF_STEP_NAME, D.EVENT_ID, D.EVENT_NAME FROM   WORKFLOW_TASK_DETAIL A,  WORKFLOW_STEP_MASTER C,  TEAM_STRUCTURE B,  EVENT D WHERE   D.HIERARCHY_ID=B.HIERARCHY_ID AND  B.ROLE_ID=2 AND  A.EVENT_ID=? AND  D.EVENT_ID=A.EVENT_ID AND  A.TEAM_MEMBER_ID=B.ID AND  A.WF_STEP_ID=C.WF_STEP_ID AND  A.TEAM_MEMBER_ID=? AND  A.TASK_STATUS!='CLOSED' AND  D.CURRENT_WF_STEP =C.STEP_SEQUENCE
EVENT.PROGRESS.TEAM.SELECT = SELECT U.ID ID, U.FIRST_NAME, U.LASTNAME FROM USER_TABLE U, TEAM_STRUCTURE T WHERE U.ID = T.ID AND T.ROLE_ID = 2 AND T.HIERARCHY_ID IN (SELECT HIERARCHY_ID FROM EVENT WHERE EVENT_ID = ?)
EVENT.PROGRESS.GET_TASK_DETAILS = SELECT WF_TASK_ID, EVENT_ID, S.WF_STEP_ID, WF_STEP_NAME, WORKFLOW_ID, STEP_SEQUENCE, TEAM_MEMBER_ID, PRIORITY, TASK_STATUS, ASSIGNED_DATE, DUE_DATE, COMPLETE_DATE, PERCENT_COMPLETE, TOTAL_TIME_TAKEN, TOTAL_TIME_ALLOCATED, MANAGER, NOTES, APPROVER_EMAIL_ID, APPROVAL_REQ FROM WORKFLOW_TASK_DETAIL T, WORKFLOW_STEP_MASTER S WHERE WF_TASK_ID = ? AND T.WF_STEP_ID = S.WF_STEP_ID
EVENT.PROGRESS.GET_MGR_MAIL = SELECT EMAIL FROM USER_ADDRESS A, USER_TABLE U WHERE A.ID = U.ID AND UPPER(U.FIRST_NAME) LIKE '"+fname.toUpperCase()+"' AND UPPER(U.LASTNAME) LIKE '"+lname.toUpperCase()+"'
EVENT.PROGRESS.GET_PRE_REQUISITE_TASK = SELECT WF_STEP_NAME FROM WORKFLOW_STEP_MASTER WHERE STEP_SEQUENCE = (SELECT MAX(STEP_SEQUENCE) FROM WORKFLOW_STEP_MASTER WHERE STEP_SEQUENCE < (SELECT S.STEP_SEQUENCE FROM WORKFLOW_STEP_MASTER S, WORKFLOW_TASK_DETAIL T WHERE WF_TASK_ID=? AND S.WF_STEP_ID=T.WF_STEP_ID) AND WORKFLOW_ID=? AND STEP_TYPE='TASK') AND WORKFLOW_ID=?
EVENT.PROGRESS.TASK.UPDATE = UPDATE WORKFLOW_TASK_DETAIL SET TEAM_MEMBER_ID=? , PRIORITY=?, TASK_STATUS=?, ASSIGNED_DATE=?, DUE_DATE=?, PERCENT_COMPLETE=?, TOTAL_TIME_TAKEN=?, TOTAL_TIME_ALLOCATED=?, NOTES=?, APPROVAL_REQ=?, APPROVER_EMAIL_ID=? WHERE WF_TASK_ID = ?
EVENT.PROGRESS.GET = SELECT WF_TASK_ID, TASK_STATUS, WF_STEP_NAME, STEP_SEQUENCE, APPROVAL_REQ, DUE_DATE, MANAGER FROM WORKFLOW_TASK_DETAIL T, WORKFLOW_STEP_MASTER S WHERE S.WF_STEP_ID = T.WF_STEP_ID AND EVENT_ID=? ORDER BY STEP_SEQUENCE
EVENT.PROGRESS.GET_APPROVER_NAME = SELECT FIRST_NAME, LASTNAME FROM WORKFLOW_TASK_DETAIL T, USER_ADDRESS A, USER_TABLE U WHERE U.ID = A.ID AND APPROVER_EMAIL_ID = EMAIL AND WF_TASK_ID = ?
EVENT.PROGRESS.EMAIL_TEMPLATE.LOCATION = SELECT TEMPLATE_DESC,TEMPLATE_LOCATION FROM EMAIL_TEMPLATE WHERE TEMPLATE_ID=?
EMAIL.TAGS.SELECT = SELECT TAG_NAME FROM EMAIL_TAGS
EVENT.STATUS.CURRENT_WF_STEP.UPDATE = UPDATE EVENT SET STATUS_ID=?, CURRENT_WF_STEP=CURRENT_WF_STEP+1 WHERE EVENT_ID=?
ACTION_DETAIL.UPDATE = UPDATE ACTION_DETAIL SET ACTION_STATUS=? WHERE ACTION_DETAIL_ID=?
ACTION.STATUS.SELECT = SELECT ACTION_STATUS FROM ACTION_DETAIL EVENT WHERE ACTION_DETAIL_ID=?
EVENT.CURRENT_WF_STEP.UPDATE = UPDATE EVENT SET CURRENT_WF_STEP=CURRENT_WF_STEP+1 WHERE EVENT_ID=?
EVENT.STATUS.UPDATE = UPDATE EVENT SET STATUS_ID=? WHERE EVENT_ID=?

EVENT.CURRENT_WF_STEP.SELECT = SELECT CURRENT_WF_STEP FROM EVENT WHERE EVENT_ID=?
EVENT.NEXT.STEP.GET_BY_SEQ = SELECT WF_STEP_ID, STEP_TYPE FROM WORKFLOW_STEP_MASTER WHERE STEP_SEQUENCE=? AND WORKFLOW_ID = (SELECT WORKFLOW_ID FROM EVENT WHERE EVENT_ID=?)
EVENT.NEXT.STEP.GET_BY_STEPID = SELECT WF_STEP_ID, STEP_TYPE FROM WORKFLOW_STEP_MASTER WHERE WF_STEP_ID = (SELECT MIN(WF_STEP_ID) FROM WORKFLOW_STEP_MASTER WHERE WORKFLOW_ID = (SELECT WORKFLOW_ID FROM EVENT WHERE EVENT_ID=?) AND WF_STEP_ID>?)

ACTION_DETAIL.EMAIL.STATUS.UPDATE = UPDATE ACTION_DETAIL SET ACTION_STATUS='Y' WHERE EVENT_ID=? AND ACTION='EMAIL'
ACTION_DETAIL.EMAIL.STATUS.SELECT = SELECT ACTION_STATUS FROM ACTION_DETAIL WHERE EVENT_ID=? AND ACTION='EMAIL' AND ACTION_STATUS!='Y'
EVENT.TYPE.SELECT = SELECT EVENT_TYPE_ID FROM EVENT_HIERARCHY H WHERE H.HIERARCHY_ID=(SELECT HIERARCHY_ID FROM EVENT WHERE EVENT_ID=?)

EMAIL.INFO.GET = SELECT G.GROUP_ID, A.ACTION_ID, TEMPLATE_ID, ACTION_TYPE, EMAIL_CONFIRM_REQ, EMAIL_CONFIRM_SOURCE FROM WORKFLOW_ACTION_MASTER A, WF_ACTION_GROUP_MAP G WHERE A.ACTION_ID=G.ACTION_ID AND WF_STEP_ID=?
USERS.GET = SELECT U.ID FROM USER_TABLE U, USER_GROUP_MAP UG WHERE UG.ID=U.ID AND GROUP_ID=? AND U.DELETE_FLAG='N'
USER.INFO.GET = SELECT U.ID, U.USER_NAME, U.FIRST_NAME, U.LASTNAME, UA.EMAIL, D.ACTION_DETAIL_ID FROM USER_TABLE U, USER_GROUP_MAP UG, USER_ADDRESS UA, ACTION_DETAIL D WHERE UG.ID=U.ID AND UG.ID=UA.ID AND D.APPROVER_ID=UG.ID AND D.ACTION='EMAIL' AND D.EVENT_ID=? AND GROUP_ID=? AND U.ID=?
TASK.COMPLETE.EMAIL.DATA = SELECT U1.USER_NAME,U1.FIRST_NAME APP_FNAME, U1.LASTNAME APP_LNAME, WF_TASK_ID, WF_STEP_NAME, U2.FIRST_NAME TEAM_FNAME, U2.LASTNAME TEAM_LNAME FROM WORKFLOW_TASK_DETAIL T, USER_ADDRESS A, USER_TABLE U1, USER_TABLE U2, WORKFLOW_STEP_MASTER S WHERE U1.ID = A.ID AND APPROVER_EMAIL_ID = EMAIL AND WF_TASK_ID = ? AND T.WF_STEP_ID = S.WF_STEP_ID AND TEAM_MEMBER_ID = U2.ID
EVENT.COMPLETION.APPROVE = UPDATE VAR_PAYMENT_PROCESS_TRANS SET APPROVAL_STATUS=?, UPDATE_TIME = SYSDATE WHERE VPP_DETAIL_ID=? AND PROCESS_SEQUENCE=? AND EXPERT_ID=?
ATTENDEE.INVITATION.APPROVAL.UPDATE = UPDATE USER_ENGAGEMENT SET ACCEPTED_INVITATION = ? WHERE ID = ? AND EVENT_ID = ?
ATTENDEE.INVITATION.APPROVAL.SELECT = SELECT ACCEPTED_INVITATION FROM USER_ENGAGEMENT WHERE ID=? AND EVENT_ID=?

EVENT.COMPLETE = UPDATE EVENT SET STATUS_ID=9 WHERE EVENT_ID=?
EVENT.CLOSE = UPDATE EVENT SET STATUS_ID=10 WHERE EVENT_ID=?
EVENT.CANCEL = UPDATE EVENT SET STATUS_ID=11 WHERE EVENT_ID=?
EVENT.BOOK.EXPERT = UPDATE EVENT SET STATUS_ID=6 WHERE EVENT_ID=?

PROGRAM.COST.UPDATE = UPDATE EVENT SET EXPERT_COST_ESTIMATE =?, VENUE_COST_ESTIMATE =?, MISC_COST_ESTIMATE = ? ,EXPERT_COST_FINAL=? ,VENUE_COST_FINAL =?, MISC_COST_FINAL = ?  WHERE EVENT_ID = ?
PROGRAM.COST.SELECT = SELECT EXPERT_COST_ESTIMATE,VENUE_COST_ESTIMATE,MISC_COST_ESTIMATE, EXPERT_COST_FINAL, VENUE_COST_FINAL, MISC_COST_FINAL FROM EVENT WHERE EVENT_ID=?

EXPERT.EMAIL.DATA = SELECT U.ID, U.USER_NAME, U.FIRST_NAME, U.LASTNAME, U.USER_TYPE_ID, EMAIL, EVENT_NAME, VENUE_NAME, ATTRIBUTE_VALUE, TYPE.EVENT_TYPE_ID FROM USER_TABLE U, USER_ADDRESS A, EVENT E, VENUE V, EVENT_ATTRIBUTE_TRANSACTION F, EVENT_TYPE TYPE, EVENT_HIERARCHY H WHERE A.ID = U.ID AND E.EVENT_ID=F.EVENT_ID AND E.HIERARCHY_ID=H.HIERARCHY_ID AND E.VENUE_ID=V.VENUE_ID AND TYPE.EVENT_TYPE_ID = H.EVENT_TYPE_ID AND E.EVENT_ID = ? AND U.ID IN ("+expertIds+") AND F.EVENT_ATT_ID IN (2,57,77) AND U.USER_TYPE_ID=3
ATTENDEE.EMAIL.DATA = SELECT U.ID, U.USER_NAME, U.FIRST_NAME, U.LASTNAME, U.USER_TYPE_ID, EMAIL, EVENT_NAME, VENUE_NAME, ATTRIBUTE_VALUE, TYPE.EVENT_TYPE_ID FROM USER_TABLE U, USER_ADDRESS A, EVENT E, VENUE V, EVENT_ATTRIBUTE_TRANSACTION F, EVENT_TYPE TYPE, EVENT_HIERARCHY H WHERE A.ID = U.ID AND E.EVENT_ID=F.EVENT_ID AND E.HIERARCHY_ID=H.HIERARCHY_ID AND E.VENUE_ID=V.VENUE_ID AND TYPE.EVENT_TYPE_ID = H.EVENT_TYPE_ID AND E.EVENT_ID = ? AND U.ID IN ("+attendeeIds+") AND F.EVENT_ATT_ID IN (2,57,77) UNION SELECT U.ID, NULL, U.FIRST_NAME, U.LASTNAME, U.USER_TYPE_ID, NULL, NULL, NULL, NULL, NULL FROM USER_TABLE U, USER_ENGAGEMENT UE, USER_ADDRESS A, EVENT E, VENUE V WHERE U.ID = UE.ID AND UE.EVENT_ID = ? AND U.USER_TYPE_ID=3 ORDER BY USER_TYPE_ID
########## Queries For Experts######
   
USER.PEER.EXPERT_SEARCH.QUERY1=SELECT DISTINCT UT.ID, UT.PREFIX,UT.FIRST_NAME,UT.LASTNAME,UA.CITY,UA.STATE,UAT.ATTRIBUTE_VALUE FROM USER_TABLE UT,USER_ADDRESS UA,USER_ATTRIBUTE_TRANSACTION UAT WHERE UT.ID=UA.ID AND UAT.ID=UT.ID AND UT.USER_TYPE_ID=3 AND UAT.USER_ATT_ID=1 AND UT.DELETE_FLAG = 'N' AND UA.DELETE_FLAG = 'N'
USER.PEER.EXPERT_SEARCH.QUERY2=SELECT DISTINCT UT.ID, UT.PREFIX,UT.FIRST_NAME,UT.LASTNAME,UA.CITY,UA.STATE,null as speciality FROM USER_TABLE UT,USER_ADDRESS UA WHERE UT.ID=UA.ID AND  UT.USER_TYPE_ID=3 AND UT.DELETE_FLAG = 'N' AND UA.DELETE_FLAG = 'N'
USER.PEER.EXPERT_SEARCH.QUERY3=MINUS SELECT DISTINCT UT.ID, UT.PREFIX,UT.FIRST_NAME,UT.LASTNAME,UA.CITY,UA.STATE,null as speciality FROM USER_TABLE UT,USER_ADDRESS UA,USER_ATTRIBUTE_TRANSACTION UAT WHERE UT.ID=UA.ID AND UAT.ID=UT.ID AND UT.USER_TYPE_ID=3 AND UAT.USER_ATT_ID=1 AND UT.DELETE_FLAG = 'N' AND UA.DELETE_FLAG = 'N'
USER.ATTR.SEARCHABLE.EXPERT = SELECT UAM.USER_ATT_ID FROM USER_ATTRIBUTE_MASTER UAM, USER_SECTION_MASTER USM, USER_TYPE UT WHERE USM.USER_SECTION_ID = UAM.USER_SECTION_ID AND USM.USER_TYPE_ID = UT.USER_TYPE_ID AND UT.USER_TYPE_ID = ? AND UAM.SEARCH_FIELD = 'Y'

 
#For Travel Perferences#

USER.TRAVEL.GETACCOUNTS=SELECT ACCOUNT_ID,ACCOUNT_NAME,PREFERENCE_TYPE_ID FROM PREFERENCE_ACCOUNT WHERE ID=? GROUP BY PREFERENCE_TYPE_ID,ACCOUNT_ID,ACCOUNT_NAME
USER.TRAVEL.GETATTRIBUTES=SELECT PREF_ATT_ID,PREF_ATT_NAME,LABEL_NAME,MANDATORY_FIELD,PREF_ATT_DATA_TYPE,PREF_ATT_SIZE,ATT_REQUIRED,ATTRIBUTE_TYPE FROM PREFERENCE_ATT_MASTER WHERE PREF_TYPE_ID = ? AND DELETE_FLAG = 'N' ORDER BY PREF_ATT_ID 
USER.TRAVEL.GETVALUES=SELECT PREF_ATT_TRANS_ID,ATTRIBUTE_VALUE,PREF_ATT_ID FROM PREFERENCE_ATT_TRANS WHERE ACCOUNT_ID = ? GROUP BY PREF_ATT_TRANS_ID,ATTRIBUTE_VALUE,PREF_ATT_ID

#Queries for Presentation Materials#
EXPERT.PRESENTATION.MATERIAL.FINDALL=SELECT MATERIAL_ID, ID, VERSION_NO, ATTR_1, ATTR_2,DOCUMENT_LOCATION, DOCUMENT_SIZE, CREATE_TIME FROM EXPERT_MATERIAL WHERE ID=? AND TYPE=?
EXPERT.PRESENTATION.MATERIAL.SEARCH=SELECT DISTINCT MATERIAL_ID, ID, VERSION_NO, ATTR_1, ATTR_2, DOCUMENT_LOCATION, DOCUMENT_SIZE, CREATE_TIME FROM EXPERT_MATERIAL WHERE TYPE=? AND (VERSION_NO LIKE ? OR ATTR_1 LIKE ? OR ATTR_2 LIKE ?)
EXPERT.PRESENTATION.MATERIAL.DELETE=DELETE FROM EXPERT_MATERIAL WHERE MATERIAL_ID=? AND TYPE=?
EXPERT.PRESENTATION.MATERIAL.INSERT=INSERT INTO EXPERT_MATERIAL(MATERIAL_ID, ID, VERSION_NO, ATTR_1, ATTR_2, DOCUMENT_LOCATION, DOCUMENT_SIZE, CREATE_TIME, TYPE)VALUES ((SELECT NVL(MAX(MATERIAL_ID),0)+1 FROM EXPERT_MATERIAL),?,?,?,?,?,?,SYSDATE,?)
 
#Rating#
EXPERT.RATING=SELECT QA.ANSWER_NUM,QM.WEIGHT,ESM.EVAL_SECTION_ID,ESM.EVAL_SECTION_NAME,QA.EVENT_ID FROM EVALUATION_SECTION_MASTER ESM,EVALUATION_FORM_MASTER EFM,QUESTIONNAIRE_ANSWER QA,QUESTION_MASTER QM,USER_ENGAGEMENT UE WHERE QA.EVALUATION_ID = EFM.EVALUATION_ID AND ESM.EVAL_SECTION_ID =EFM.EVAL_SECTION_ID AND ESM.EVAL_SECTION_TYPE_ID = 2 AND UE.EVENT_ID = QA.EVENT_ID AND QM.QUESTION_ID = EFM.QUESTION_ID AND UE.ACCEPTED_INVITATION = 'Y' AND UE.ID=? ORDER BY QA.EVENT_ID
EXPERT.ADSEARCH.GET_ATTRIBUTE_INFO =SELECT   USER_ATT_ID,  USER_ATT_NAME,  LABEL_NAME,  USER_ATT_DATA_TYPE,  ATTRIBUTE_TYPE, OPTIONS, USER_ATT_SIZE FROM  USER_ATTRIBUTE_MASTER A,  USER_SECTION_MASTER B,  USER_TYPE C WHERE   A.SEARCH_FIELD = 'Y' AND  C.USER_TYPE_ID= B.USER_TYPE_ID AND  B.USER_TYPE_ID=3 AND  A.USER_SECTION_ID =B.USER_SECTION_ID  AND  A.USER_ATT_ID NOT IN(1) AND A.DELETE_FLAG='N' ORDER BY USER_ATT_ID
EXPERT.ADSEARCH.CUST_ATT.FIND = SELECT   USER_ATT_ID,  USER_ATT_NAME,  LABEL_NAME,  USER_ATT_DATA_TYPE,  ATTRIBUTE_TYPE, OPTIONS, USER_ATT_SIZE FROM  USER_ATTRIBUTE_MASTER A,  USER_SECTION_MASTER B,  USER_TYPE C WHERE   A.SEARCH_FIELD = 'Y' AND  C.USER_TYPE_ID= B.USER_TYPE_ID AND  B.USER_TYPE_ID=3 AND  A.USER_SECTION_ID =B.USER_SECTION_ID  AND  A.USER_ATT_ID NOT IN(1) AND A.DELETE_FLAG='N' ORDER BY LABEL_NAME

########## Queries For Attendee Peersearch ######
   
USER.PEER.ATTENDEE_SEARCH.QUERY1=SELECT DISTINCT UT.ID, UT.PREFIX,UT.FIRST_NAME,UT.LASTNAME,UA.CITY,UA.STATE,UAT.ATTRIBUTE_VALUE FROM USER_TABLE UT,USER_ADDRESS UA,USER_ATTRIBUTE_TRANSACTION UAT WHERE UT.ID=UA.ID AND UAT.ID=UT.ID AND UT.USER_TYPE_ID=4 AND UAT.USER_ATT_ID=17 AND UT.DELETE_FLAG = 'N' AND UA.DELETE_FLAG = 'N'
USER.PEER.ATTENDEE_SEARCH.QUERY2=SELECT DISTINCT UT.ID, UT.PREFIX,UT.FIRST_NAME,UT.LASTNAME,UA.CITY,UA.STATE,null as speciality FROM USER_TABLE UT,USER_ADDRESS UA WHERE UT.ID=UA.ID AND  UT.USER_TYPE_ID=4 AND UT.DELETE_FLAG = 'N' AND UA.DELETE_FLAG = 'N'
USER.PEER.ATTENDEE_SEARCH.QUERY3=MINUS SELECT DISTINCT UT.ID, UT.PREFIX,UT.FIRST_NAME,UT.LASTNAME,UA.CITY,UA.STATE,null as speciality FROM USER_TABLE UT,USER_ADDRESS UA,USER_ATTRIBUTE_TRANSACTION UAT WHERE UT.ID=UA.ID AND UAT.ID=UT.ID AND UT.USER_TYPE_ID=4 AND UAT.USER_ATT_ID=17 AND UT.DELETE_FLAG = 'N' AND UA.DELETE_FLAG = 'N'

########## Email Data ##########
PAYMENT.APPROVED.EMAIL.DATA = SELECT U.FIRST_NAME, U.LASTNAME, U1.FIRST_NAME FN, U1.LASTNAME LN, EXP.FIRST_NAME EXP_FN, EXP.LASTNAME EXP_LN, EVENT_NAME, EMAIL FROM USER_TABLE U, USER_TABLE U1, USER_TABLE EXP, EVENT, USER_ADDRESS A, VAR_PAYMENT_PROCESS_MASTER M, VAR_PAYMENT_PROCESS_DETAIL D WHERE U.ID=(SELECT CREATOR_ID FROM EVENT WHERE EVENT_ID=?) AND EVENT_ID=? AND U.ID = A.ID AND D.PAYMENT_PROCESS_ID = M.PAYMENT_PROCESS_ID AND D.PAYMENT_PROCESS_ID IN (SELECT PAYMENT_PROCESS_ID FROM VAR_PAYMENT_PROCESS_MASTER WHERE ? BETWEEN MIN_VALUE AND MAX_VALUE) AND APPROVER_ID=U1.ID AND EXP.ID=?
EVENT.CANCEL.EMAIL.DATA = SELECT   DISTINCT C4.FIRST_NAME,   C4.LASTNAME,   A4.EMAIL,   'E' ROLE,   E.EVENT_NAME,   V.VENUE_NAME,   F.ATTRIBUTE_VALUE FROM  USER_ENGAGEMENT UE,  USER_TABLE C4,  USER_ADDRESS A4,   EVENT E,   VENUE V,  EVENT_ATTRIBUTE_TRANSACTION F WHERE   UE.ID = C4.ID AND   UE.ID = A4.ID AND   UE.ACCEPTED_INVITATION = 'Y' AND   UE.EVENT_ID = E.EVENT_ID AND   E.VENUE_ID = V.VENUE_ID AND   C4.USER_TYPE_ID = 3 AND   E.EVENT_ID = F.EVENT_ID AND   F.EVENT_ATT_ID IN (2,57,77) AND   E.EVENT_ID = ?   UNION   SELECT  DISTINCT C.FIRST_NAME,   C.LASTNAME,   A.EMAIL,   'C' ROLE,   E.EVENT_NAME,   V.VENUE_NAME,   F.ATTRIBUTE_VALUE FROM   USER_TABLE C,   USER_ADDRESS A,   EVENT E,   VENUE V,   EVENT_ATTRIBUTE_TRANSACTION F WHERE   C.ID = E.CREATOR_ID AND   C.ID = A.ID AND   E.VENUE_ID = V.VENUE_ID AND   E.EVENT_ID = F.EVENT_ID AND   F.EVENT_ATT_ID IN (2,57,77) AND   E.EVENT_ID = ? UNION SELECT DISTINCT C.FIRST_NAME, C.LASTNAME, A.EMAIL, 'T' ROLE, E.EVENT_NAME,   V.VENUE_NAME, F.ATTRIBUTE_VALUE FROM USER_TABLE C, USER_ADDRESS A, EVENT E, VENUE V, EVENT_ATTRIBUTE_TRANSACTION F, WORKFLOW_TASK_DETAIL T WHERE C.ID = T.TEAM_MEMBER_ID AND   C.ID = A.ID AND   E.VENUE_ID = V.VENUE_ID AND   E.EVENT_ID = F.EVENT_ID AND   F.EVENT_ATT_ID IN (2,57,77) AND   E.EVENT_ID = ? UNION SELECT   DISTINCT C.FIRST_NAME,  C.LASTNAME,  A.EMAIL,  'M' ROLE,  E.EVENT_NAME,  V.VENUE_NAME,  F.ATTRIBUTE_VALUE FROM   USER_TABLE C,   USER_ADDRESS A,   EVENT E,   VENUE V,   EVENT_ATTRIBUTE_TRANSACTION F,   TEAM_STRUCTURE TEAM WHERE   C.ID = TEAM.ID AND   TEAM.ROLE_ID = 1 AND   C.ID = A.ID AND   E.VENUE_ID = V.VENUE_ID AND   E.EVENT_ID = F.EVENT_ID AND   E.VENUE_ID = V.VENUE_ID AND   TEAM.HIERARCHY_ID = E.HIERARCHY_ID AND   F.EVENT_ATT_ID IN (2,57,77) AND   E.EVENT_ID = ? UNION SELECT DISTINCT C4.FIRST_NAME, C4.LASTNAME, A4.EMAIL, 'A' ROLE, E.EVENT_NAME,   V.VENUE_NAME, F.ATTRIBUTE_VALUE FROM USER_ENGAGEMENT UE, USER_TABLE C4, USER_ADDRESS A4, EVENT E, VENUE V, EVENT_ATTRIBUTE_TRANSACTION F WHERE UE.ID = C4.ID AND   UE.ID = A4.ID AND   UE.ACCEPTED_INVITATION = 'Y' AND   UE.EVENT_ID = E.EVENT_ID AND   C4.USER_TYPE_ID = 4 AND   E.VENUE_ID = V.VENUE_ID AND   E.EVENT_ID = F.EVENT_ID AND   F.EVENT_ATT_ID IN (2,57,77) AND   E.EVENT_ID = ? 

########## Interactions ##########
INTERACTION.INSERT = INSERT INTO INTERACTIONS (INTERACTION_ID, ID,INTERACTIONTYPE,INTERACTION_DATE, CREATE_TIME, UPDATE_TIME, NOTES, OPEN_ISSUES, NEXT_STEPS, OUTCOME, EXPERT_ID) VALUES ((SELECT NVL(MAX(INTERACTION_ID),0)+1 FROM INTERACTIONS), ?, ?, ?, SYSDATE, SYSDATE, ?, ?, ?, ?, ?)
INTERACTIONS.UPDATE = UPDATE INTERACTIONS SET INTERACTIONTYPE = ?,INTERACTION_DATE = ?, UPDATE_TIME = SYSDATE, NOTES = ?, OPEN_ISSUES = ?, NEXT_STEPS = ?, OUTCOME = ? WHERE INTERACTION_ID = ?
GET.ALL.INTERACTIONS = SELECT INTERACTION_ID, I.ID, USER_NAME, INTERACTIONTYPE,INTERACTION_DATE, NOTES, OPEN_ISSUES, NEXT_STEPS, OUTCOME FROM INTERACTIONS I, USER_TABLE U WHERE I.ID=U.ID AND EXPERT_ID = ?
INTERACTION.DETAILS.SELECT = SELECT INTERACTION_ID, I.ID, USER_NAME, INTERACTIONTYPE,INTERACTION_DATE, NOTES, OPEN_ISSUES, NEXT_STEPS, OUTCOME FROM INTERACTIONS I, USER_TABLE U WHERE INTERACTION_ID = ? AND I.ID=U.ID

########## Contacts ##########
CONTACT.INSERT = INSERT INTO CONTACTS (CONTACT_ID, EXPERT_ID, CONTACT_TYPE, NAME, EMAIL, PHONE, BRAND, PRIMARY_CONTACT, ROLE, CREATE_TIME, UPDATE_TIME) VALUES ((SELECT NVL(MAX(CONTACT_ID),0)+1 FROM CONTACTS), ?, ?, ?, ?, ?, ?, ?, ?, SYSDATE, SYSDATE)
CONTACTS.UPDATE = UPDATE CONTACTS SET NAME = ?, EMAIL = ?, PHONE = ?, BRAND = ?, CONTACT_TYPE = ?, UPDATE_TIME = SYSDATE, PRIMARY_CONTACT=?, ROLE=? WHERE CONTACT_ID = ?
GET.ALL.CONTACTS = SELECT CONTACT_ID, CONTACT_TYPE, NAME, EMAIL, PHONE, BRAND, PRIMARY_CONTACT, ROLE FROM CONTACTS WHERE EXPERT_ID = ?
CONTACTS.COUNT = SELECT COUNT(*) FROM CONTACTS WHERE EXPERT_ID = ? AND CONTACT_TYPE = ?
CONTACT.DETAILS.SELECT = SELECT CONTACT_ID, CONTACT_TYPE, NAME, EMAIL, PHONE, BRAND, PRIMARY_CONTACT, ROLE FROM CONTACTS WHERE CONTACT_ID = ?
CONTACT.DELETE = DELETE FROM CONTACTS WHERE CONTACT_ID = ?

########## Development Plan ##########
DEV_PLAN.INSERT = INSERT INTO KOL_DEVELOPMENT_PLAN (PLAN_ID,  ACTIVITY, ROLE,  CREATE_TIME,UPDATE_TIME, USER_ID, EXPERT_ID, THERAPY, STATUS,DUE_DATE,OWNER,STAFFID, COMMENTS) VALUES ((SELECT NVL(MAX(PLAN_ID),0)+1 FROM KOL_DEVELOPMENT_PLAN), ?, ?, SYSDATE, SYSDATE,?, ?, ?,?,?,?,?,?)
DEV_PLAN.UPDATE = UPDATE KOL_DEVELOPMENT_PLAN SET  ACTIVITY = ?, ROLE = ?,  UPDATE_TIME = SYSDATE,  STATUS = ? ,THERAPY=?, DUE_DATE=? ,OWNER=? , STAFFID=?,COMMENTS=? WHERE PLAN_ID = ?
GET.ALL.DEV_PLANS = SELECT PLAN_ID, YEAR, TRIMESTER, ACTIVITY, ROLE, OUTCOME, PLAN_COST, ID, STRATEGY FROM KOL_DEVELOPMENT_PLAN WHERE EXPERT_ID = ?
DEV_PLAN.DETAILS.SELECT = SELECT PLAN_ID, YEAR, TRIMESTER, ACTIVITY, ROLE, OUTCOME, PLAN_COST, ID, STRATEGY , STATUS FROM KOL_DEVELOPMENT_PLAN WHERE PLAN_ID = ?
DEV_PLAN.DELETE = DELETE FROM KOL_DEVELOPMENT_PLAN WHERE PLAN_ID = ?

########## Reports ##########
REPORT.ADD = INSERT INTO REPORT (REPORT_ID, REPORT_NAME, REPORT_DESC, CREATE_TIME, UPDATE_TIME, REPORT_LOCATION) VALUES ((SELECT NVL(MAX(REPORT_ID),0)+1 FROM REPORT), ?, ?, SYSDATE, SYSDATE, ?)
REPORT.UPDATE = UPDATE REPORT SET REPORT_NAME = ?, REPORT_DESC = ?, UPDATE_TIME = SYSDATE, REPORT_LOCATION = ? WHERE REPORT_ID = ?
REPORT.GET.ALL = SELECT REPORT_ID, REPORT_NAME, REPORT_DESC, REPORT_LOCATION FROM REPORT ORDER BY REPORT_ID
REPORT.GET.DETAILS = SELECT REPORT_ID, REPORT_NAME, REPORT_DESC, REPORT_LOCATION FROM REPORT WHERE REPORT_ID = ?
REPORT.DELETE = DELETE FROM REPORT WHERE REPORT_ID = ? 
REPORT.PERMISSION.ASSIGN = INSERT INTO REPORT_PERMISSION_MAP (REPORT_ID, GROUP_ID, CREATE_TIME, UPDATE_TIME) VALUES (?, ?, SYSDATE, SYSDATE)
REPORT.GET.GROUPWISE = SELECT RPM.REPORT_ID, REPORT_NAME, REPORT_DESC, RPM.GROUP_ID, GROUP_NAME FROM REPORT R, REPORT_PERMISSION_MAP RPM, GROUP_MASTER G WHERE RPM.REPORT_ID=R.REPORT_ID AND RPM.GROUP_ID=G.GROUP_ID ORDER BY GROUP_ID
REPORT.GET.BY.GROUP = SELECT RPM.REPORT_ID, RPM.GROUP_ID FROM REPORT_PERMISSION_MAP RPM WHERE RPM.GROUP_ID=? ORDER BY REPORT_ID
REPORT.PERMISSION.ALL.DELETE = DELETE FROM REPORT_PERMISSION_MAP WHERE GROUP_ID=?
REPORT.PERMISSION.DELETE = DELETE FROM REPORT_PERMISSION_MAP WHERE REPORT_ID=? AND GROUP_ID=?

USER.REPORT.SELECT = SELECT R.REPORT_ID, R.REPORT_NAME, R.REPORT_DESC, R.REPORT_LOCATION FROM REPORT_PERMISSION_MAP RPM, REPORT R, GROUP_MASTER GM WHERE R.REPORT_ID = RPM.REPORT_ID AND GM.GROUP_ID = RPM.GROUP_ID AND GM.GROUP_ID IN(?)

########## Search ##########
EXPERT.ADSEARCH.GETRATESINFO = SELECT DISTINCT ATTRIBUTE_VALUE  FROM USER_ATTRIBUTE_TRANSACTION WHERE USER_ATT_ID = 16
EXPERT.ADSEARCH.GETSPECIALITYINFO = SELECT DISTINCT ATTRIBUTE_VALUE  FROM USER_ATTRIBUTE_TRANSACTION WHERE USER_ATT_ID = 1
 
########## KOL Strategy ##########

KOL_ADD_SEGMENT = INSERT INTO SEGMENT (SEGMENT_ID ,PARENT_ID ,NAME ,DESCRIPTION ,CREATED_BY ,CREATE_DATE ,STRATEGY_LEVEL,TA,FA,REGION) VALUES ((SELECT NVL(MAX(SEGMENT_ID),0)+1 FROM SEGMENT),?,?,?,?,SYSDATE,?,?,?,?)
KOL_GET_SEGMENT_TREE = SELECT  A.SEGMENT_ID,A.PARENT_ID,A.NAME,A.DESCRIPTION,A.CREATE_DATE,A.STRATEGY_LEVEL,B.FIRSTNAME,B.LASTNAME,A.TA, A.FA, A.REGION FROM SEGMENT A,USER_TABLE B WHERE A.CREATED_BY = B.ID ORDER BY PARENT_ID, SEGMENT_ID, NAME,  STRATEGY_LEVEL, DESCRIPTION, CREATE_DATE, FIRSTNAME, LASTNAME 
KOL_GET_EXPERTS_FOR_SEGMENT = SELECT A.ID,A.FIRSTNAME,A.LASTNAME,A.LATITUDE,A.LONGITUDE,A.INFLUENCE_LEVEL,A.REFERENCE, B.ATTRIBUTE_VALUE AS SPECIALITY,D.CITY,D.STATE,D.COUNTRY,D.ZIP,D.PHONE FROM USER_TABLE A, USER_ATTRIBUTE_TRANSACTION B ,USER_ADDRESS D WHERE A.ID IN (SELECT EXPERT_ID FROM SEGMENT_EXPERTS WHERE SEGMENT_ID = ?) AND A.ID=B.ID AND A.ID = D.ID AND B.USER_ATT_ID =1 UNION SELECT A.ID,A.FIRSTNAME,A.LASTNAME,A.LATITUDE,A.LONGITUDE,A.INFLUENCE_LEVEL,A.REFERENCE,' ' AS SPECIALITY,D.CITY,D.STATE,D.COUNTRY,D.ZIP,D.PHONE FROM USER_TABLE A,USER_ADDRESS D WHERE A.ID IN (SELECT EXPERT_ID FROM SEGMENT_EXPERTS WHERE SEGMENT_ID = ?) AND A.ID = D.ID AND A.ID NOT IN (SELECT A.ID FROM USER_TABLE A, USER_ATTRIBUTE_TRANSACTION B WHERE A.ID IN (SELECT EXPERT_ID FROM SEGMENT_EXPERTS WHERE SEGMENT_ID = ?) AND A.ID=B.ID AND B.USER_ATT_ID =1)

KOL_DELETE_NODE = DELETE FROM SEGMENT WHERE SEGMENT_ID = ? OR PARENT_ID=?
KOL_DELETE_EXPERTS_IN_SEGMENT = DELETE FROM SEGMENT_EXPERTS WHERE SEGMENT_ID = ? AND EXPERT_ID = ?
KOL_GET_NODES_FOR_PARENTID = SELECT A.SEGMENT_ID, A.PARENT_ID, A.NAME, A.DESCRIPTION, A.CREATE_DATE, A.STRATEGY_LEVEL, B.FIRSTNAME, B.LASTNAME, C.SEGMENT_ID CHILD_ID , A.CREATED_BY , A.TA, A.FA, A.REGION FROM SEGMENT A, USER_TABLE B, SEGMENT C WHERE A.CREATED_BY = B.ID AND A.PARENT_ID=? AND C.PARENT_ID IN (SELECT A.SEGMENT_ID FROM SEGMENT A, USER_TABLE B WHERE A.CREATED_BY = B.ID AND A.PARENT_ID=?) AND C.PARENT_ID=A.SEGMENT_ID UNION SELECT A.SEGMENT_ID, A.PARENT_ID, A.NAME, A.DESCRIPTION, A.CREATE_DATE, A.STRATEGY_LEVEL, B.FIRSTNAME, B.LASTNAME, NULL,NULL,NULL,NULL , NULL  FROM SEGMENT A, USER_TABLE B WHERE A.CREATED_BY = B.ID AND A.PARENT_ID=? AND A.SEGMENT_ID NOT IN (SELECT A.SEGMENT_ID FROM SEGMENT A, USER_TABLE B, SEGMENT C WHERE A.CREATED_BY = B.ID AND A.PARENT_ID=? AND C.PARENT_ID IN (SELECT A.SEGMENT_ID FROM SEGMENT A, USER_TABLE B WHERE A.CREATED_BY = B.ID AND A.PARENT_ID=?) AND C.PARENT_ID=A.SEGMENT_ID) ORDER BY SEGMENT_ID
KOL_GET_STRATEGY_SEGMENTID = SELECT A.SEGMENT_ID,A.PARENT_ID,A.NAME,A.DESCRIPTION,A.CREATE_DATE,A.STRATEGY_LEVEL,A.DESCRIPTION,A.OBJECTIVE,A.STATED_STRATEGY,A.KEY_MESSAGES,A.STRATEGY_STATUS,B.FIRSTNAME,B.LASTNAME, A.TA, A.FA, A.REGION, C.OPTVALUE TA_NAME, D.OPTVALUE FA_NAME FROM SEGMENT A,USER_TABLE B, OPTION_LOOKUP C, OPTION_LOOKUP D WHERE A.CREATED_BY = B.ID AND A.SEGMENT_ID = ? AND A.TA=C.ID AND A.FA=D.ID


KOL_SEGMENT_CRITERIA_ATT_NAME = SELECT UAM.USER_ATT_ID,UAM.USER_ATT_NAME,UAM.USER_ATT_DATA_TYPE FROM USER_ATTRIBUTE_MASTER UAM WHERE UAM.USER_SECTION_ID IN (SELECT USER_SECTION_ID FROM USER_SECTION_MASTER WHERE USER_TYPE_ID = 3)
KOL_SAVE_STRATEGY = UPDATE SEGMENT SET KEY_MESSAGES = ?,STATED_STRATEGY = ?,OBJECTIVE = ?,STRATEGY_STATUS =? WHERE SEGMENT_ID = ?

#	## Key Message ##
KOL.KEYMESSAGE.INFO.SELECT = SELECT KEY_MESSAGE_ID, KEY_MESSAGE_NAME, MARKET_CLAIMS, KEY_MESSAGE_DATE, MARKET_CLAIMS_DESC FROM KOL_KEY_MESSAGE WHERE KEY_MESSAGE_ID = ? 
KOL.ALL_KEYMESSAGE.INFO.SELECT = SELECT KEY_MESSAGE_ID, KEY_MESSAGE_NAME, MARKET_CLAIMS, KEY_MESSAGE_DATE, MARKET_CLAIMS_DESC FROM KOL_KEY_MESSAGE ORDER BY MARKET_CLAIMS DESC
KOL.KEYMESSAGE.INFO.INSERT = INSERT INTO KOL_KEY_MESSAGE (KEY_MESSAGE_ID, KEY_MESSAGE_NAME, MARKET_CLAIMS, KEY_MESSAGE_DATE, MARKET_CLAIMS_DESC, CREATE_TIME) VALUES ((SELECT NVL(MAX(KEY_MESSAGE_ID),0)+1 FROM KOL_KEY_MESSAGE), ?, ?, ?, ?, SYSYDATE)
KOL.KEYMESSAGE.INFO.UPDATE = UPDATE KOL_KEY_MESSAGE SET KEY_MESSAGE_NAME=?, MARKET_CLAIMS=?, KEY_MESSAGE_DATE=?, MARKET_CLAIMS_DESC=? WHERE KEY_MESSAGE_ID = ?

#    ## Brand Objectives ##
KOL.SEGMENT.OBJECTIVE.SELECT = SELECT SEGMENT_ID, NAME, STATED_STRATEGY, OBJECTIVE FROM SEGMENT WHERE UPPER(STRATEGY_LEVEL)='TRUE'

#	## Tactics ##
KOL.TACTICS.INFO.SELECT = SELECT TACTIC_ID, TACTIC_NAME, TACTIC_DETAILS, T.FA, T.TA, T.REGION, MAIN_OBJECTIVE_ID, MAIN_OBJECTIVE FROM KOL_TACTICS T, MAIN_OBJECTIVES M WHERE MAIN_OBJECTIVE_ID=OBJECTIVES AND TACTIC_ID = ? 
KOL.ALL_TACTICS.INFO.SELECT = SELECT  DISTINCT K.ACTIVITY , TACTIC_ID, TACTIC_NAME, TACTIC_DETAILS, T.FA, T.TA, T.REGION, MAIN_OBJECTIVE_ID, MAIN_OBJECTIVE FROM KOL_TACTICS T, MAIN_OBJECTIVES M , KOL_DEVELOPMENT_PLAN K WHERE MAIN_OBJECTIVE_ID=OBJECTIVES AND TO_CHAR(ACTIVITY(+))=TACTIC_ID AND T.TA =? AND T.FA = ? AND T.REGION = ? ORDER BY TACTIC_NAME DESC
KOL.TACTICS.INFO.INSERT = INSERT INTO KOL_TACTICS (TACTIC_ID, TACTIC_NAME, TACTIC_DETAILS, FA, TA, REGION, OBJECTIVES, CREATE_TIME) VALUES ((SELECT NVL(MAX(TACTIC_ID),0)+1 FROM KOL_TACTICS), ?, ?, ?, ?, ?, ? SYSYDATE)
KOL.TACTICS.INFO.UPDATE = UPDATE KOL_TACTICS SET TACTIC_NAME=?, TACTIC_DETAILS=?, FA=?, TA=?, REGION=?, OBJECTIVES=? WHERE TACTIC_ID = ?

#	## Segment Tactics ##
KOL.SEGMENT_TACTIC.INFO.SELECT = SELECT ST.SEGMENT_TACTIC_ID, ST.SEGMENT_ID, ST.TACTIC_ID, T.TACTIC_NAME, ST.SEGMENT_ROLE, O.OPTVALUE AS ROLE ,to_char(ST.TACTIC_DUE_DATE,'MM/dd/yyyy') TACTIC_DUE_DATE  FROM SEGMENT_TACTICS ST, KOL_TACTICS T , OPTION_LOOKUP O WHERE ST.TACTIC_ID = T.TACTIC_ID AND ST.SEGMENT_TACTIC_ID = ? AND ST.SEGMENT_ROLE=O.ID
KOL.SEGMENT_TACTICS.INFO.SELECT = SELECT ST.SEGMENT_TACTIC_ID, ST.SEGMENT_ID, ST.TACTIC_ID, T.TACTIC_NAME, ST.SEGMENT_ROLE,O.OPTVALUE AS ROLE, to_char(ST.TACTIC_DUE_DATE,'MM/dd/yyyy') TACTIC_DUE_DATE FROM SEGMENT_TACTICS ST, KOL_TACTICS T,OPTION_LOOKUP O WHERE ST.TACTIC_ID = T.TACTIC_ID AND ST.SEGMENT_ID = ? AND O.ID=ST.SEGMENT_ROLE
KOL.SEGMENT_TACTICS.INFO.INSERT = INSERT INTO SEGMENT_TACTICS (SEGMENT_TACTIC_ID, SEGMENT_ID, TACTIC_ID, QUARTER, SEGMENT_ROLE, REGION, BUDGET, CREATE_TIME) VALUES ((SELECT NVL(MAX(SEGMENT_TACTIC_ID),0)+1 FROM SEGMENT_TACTICS), ?, ?, ?, ?, ?, ?, SYSDATE)
KOL.SEGMENT_TACTICS.INFO.UPDATE = UPDATE SEGMENT_TACTICS SET TACTIC_ID=?, SEGMENT_ROLE=?, TACTIC_DUE_DATE=? WHERE SEGMENT_TACTIC_ID = ?

 #      ## Main Objectives##
KOL.ALL_MAIN_OBJECTIVES.INFO.SELECT = SELECT MAIN_OBJECTIVE_ID,MAIN_OBJECTIVE,DESCRIPTION, FA, TA, REGION FROM MAIN_OBJECTIVES
KOL.MAIN.0BJECTIVE.INFO.SELECT = SELECT MAIN_OBJECTIVE_ID,MAIN_OBJECTIVE,DESCRIPTION , FA, TA, REGION FROM MAIN_OBJECTIVES WHERE MAIN_OBJECTIVE_ID = ?
KOL.MAIN.0BJECTIVE.INFO.UPDATE = UPDATE MAIN_OBJECTIVE SET MAIN_OBJECTIVE=?, DESCRIPTION=?, CREATE_TIME=? WHERE MAIN_OBJECTIVE_ID = ?
KOL.ALL_MAIN_OBJECTIVES.INFO.SELECT.BASED_ON_FILTER = SELECT DISTINCT M.MAIN_OBJECTIVE_ID MAIN_OBJECTIVE_ID, M.MAIN_OBJECTIVE  MAIN_OBJECTIVE, M.DESCRIPTION DESCRIPTION, M.FA FA, M.TA TA, M.REGION REGION, K.OBJECTIVES OBJECTIVES FROM MAIN_OBJECTIVES M,KOL_TACTICS K  WHERE M.TA=? AND M.FA =? AND M.REGION=? AND M.MAIN_OBJECTIVE_ID= K.OBJECTIVES(+) ORDER BY MAIN_OBJECTIVE DESC
 
########## Profile Capture ##########
PROFILE_CAPTURE_GET_CATEGORIES = SELECT * FROM PROFILE_CATEGORIES ORDER BY NAME
PROFILE_CAPTURE_ADD_CATEGORY = INSERT INTO PROFILE_CATEGORIES (CATEGORY_ID, NAME, CATEGORY_KEYWORDS) VALUES ((SELECT NVL(MAX(CATEGORY_ID), 0) + 1 FROM PROFILE_CATEGORIES), ?, ?)
PROFILE_CAPTURE_UPDATE_CATEGORY = UPDATE PROFILE_CATEGORIES SET NAME = ?, CATEGORY_KEYWORDS = ? WHERE CATEGORY_ID = ?
PROFILE_CAPTURE_GET_RESULTS = SELECT * FROM PROFILE_RESULTS WHERE COMMIT_FLAG <> 'Y' ORDER BY LASTNAME, FIRSTNAME
PROFILE_CAPTURE_GET_BY_ID = SELECT * FROM PROFILE_RESULTS WHERE PROFILE_ID = ?
PROFILE_CAPTURE_ADD_RESULT = INSERT INTO PROFILE_RESULTS (PROFILE_ID, FIRSTNAME, LASTNAME, PERCENTAGE_COMPLETE, INFLUENCE_FACTOR, MODIFY_DATE, CATEGORIES, AVG_COAUTHORS, INSTITUTION, CITY, STATE, COUNTRY, COMMIT_FLAG) VALUES ((SELECT NVL(MAX(PROFILE_ID), 0) + 1 FROM PROFILE_RESULTS), ?, ?, ?, ?, SYSDATE, ?, ?, ?, ?, ?, ?, 'N')
PROFILE_CAPTURE_COMMIT = UPDATE PROFILE_RESULTS SET COMMIT_FLAG = 'Y' WHERE PROFILE_ID IN 
PROFILE_CAPTURE_GET_ARTICLES = SELECT a.* FROM PROFILE_ARTICLE a, PROFILE_ARTICLE_AUTHORS paa WHERE paa.AUTHOR_ID = ? AND paa.PUBMED_ID = a.PUBMED_ID
PROFILE_CAPTURE_GET_TRIALS = SELECT t.* FROM PROFILE_TRIAL t WHERE t.PROFILE_ID = ?

#	## KOL Capabilities ##
KOL.CAPABILITY.INFO.SELECT = SELECT EC.ACTIVITY_ID, EC.EXPERT_ID, EC.TACTIC_ID, KT.TACTIC_NAME, EC.PLAN_ID, EC.ACTIVITY_NAME, EC.ACTIVITY_DATE, EC.LOCATION, EC.ASSESSMENT, EC.TOPICS  FROM EXPERT_CAPABILITY EC, KOL_TACTICS KT WHERE EC.ACTIVITY_ID = ? AND KT.TACTIC_ID = EC.TACTIC_ID
KOL.ALL_CAPABILITIES.INFO.SELECT = SELECT EC.ACTIVITY_ID, EC.EXPERT_ID, EC.TACTIC_ID, KT.TACTIC_NAME, EC.PLAN_ID, EC.ACTIVITY_NAME, EC.ACTIVITY_DATE, EC.LOCATION, EC.ASSESSMENT, EC.TOPICS FROM EXPERT_CAPABILITY EC, KOL_TACTICS KT WHERE EC.EXPERT_ID = ? AND KT.TACTIC_ID = EC.TACTIC_ID
KOL.CAPABILITY.INFO.INSERT = INSERT INTO EXPERT_CAPABILITY (ACTIVITY_ID, EXPERT_ID, TACTIC_ID, PLAN_ID, ACTIVITY_NAME, ACTIVITY_DATE, LOCATION, ASSESSMENT, TOPICS, CREATE_TIME) VALUES ((SELECT NVL(MAX(ACTIVITY_ID),0)+1 FROM EXPERT_CAPABILITY), ?, ?, ?, ?, ?, ?, ?, ?, SYSYDATE)
KOL.CAPABILITY.INFO.UPDATE = UPDATE EXPERT_CAPABILITY SET TACTIC_ID = ?, PLAN_ID = ?, ACTIVITY_NAME = ?, LOCATION = ?, ACTIVITY_DATE = ?, ASSESSMENT = ?, TOPICS = ? WHERE ACTIVITY_ID = ?


########## Contacts ##########
CONTACT.INSERT = INSERT INTO CONTACTS (CONTACT_ID, EXPERT_ID, CONTACT_TYPE, NAME, EMAIL, PHONE, BRAND, PRIMARY_CONTACT, ROLE, CREATE_TIME, UPDATE_TIME) VALUES ((SELECT NVL(MAX(CONTACT_ID),0)+1 FROM CONTACTS), ?, ?, ?, ?, ?, ?, ?, ?, SYSDATE, SYSDATE)
CONTACTS.UPDATE = UPDATE CONTACTS SET NAME = ?, EMAIL = ?, PHONE = ?, BRAND = ?, CONTACT_TYPE = ?, UPDATE_TIME = SYSDATE, PRIMARY_CONTACT=?, ROLE=? WHERE CONTACT_ID = ?
GET.ALL.CONTACTS = SELECT CONTACT_ID, CONTACT_TYPE, NAME, EMAIL, PHONE, BRAND, PRIMARY_CONTACT, ROLE FROM CONTACTS WHERE EXPERT_ID = ?
CONTACTS.COUNT = SELECT COUNT(*) FROM CONTACTS WHERE EXPERT_ID = ? AND CONTACT_TYPE = ?
CONTACT.DETAILS.SELECT = SELECT CONTACT_ID, CONTACT_TYPE, NAME, EMAIL, PHONE, BRAND, PRIMARY_CONTACT, ROLE FROM CONTACTS WHERE CONTACT_ID = ?
CONTACT.DELETE = DELETE FROM CONTACTS WHERE CONTACT_ID = ?
